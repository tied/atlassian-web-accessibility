{namespace Confluence.Templates.SpaceDirectory}

/**
 * @param spaceKey
 * @param spaceName
 * @param truncatedSpaceName
 * @param spaceDescHtml
 * @param spaceUrl
 * @param logoUrl
 * @param remoteUser "" if the user is not logged in
 * @param accessMode the read-only (or read-write) accessmode of confluence
 */
{template .spaceListItem}
    {let $isLoggedIn: $remoteUser != ''/}
    <tr class="space-list-item" data-spacekey="{$spaceKey}">
        <td class="entity-attribute space-logo entity-logo entity-icon">
            <img class="space logo" src="{$logoUrl}" alt=""/>
        </td>
        <td class="entity-attribute space-name">
            <a href="{$spaceUrl}">{$truncatedSpaceName}</a>
        </td>
        <td class="entity-attribute space-desc">
            <span>{$spaceDescHtml|noAutoescape}</span>
        </td>
        <td class="entity-attribute space-labels">
        </td>
        {if $isLoggedIn}
        <td class="entity-attribute entity-icon entity-info-icon right" data-entity-id="{$spaceKey}" data-entity-type="space">
            <a class="aui-icon aui-icon-small aui-iconfont-info" href="{contextPath()}/spaces/viewspacesummary.action?key={$spaceKey}">{getText('space.details')}</a>
        </td>
            <td class="entity-attribute entity-icon entity-favourites space-favourites {if $accessMode == 'READ_ONLY'}disabled{/if}" data-entity-id="{$spaceKey}" data-entity-type="space" data-entity-scope="space-directory">
                <a class="aui-icon aui-icon-small aui-iconfont-star-filled hidden" title="{getText('space.stop.favourite')}" href="#">{getText('favourite.remove.space.short', $spaceName)}</a>
                <a class="aui-icon aui-icon-small aui-iconfont-new-star hidden" title="{getText('space.start.favourite')}" href="#">{getText('favourite.add.space.short', $spaceName)}</a>
                <span class="icon icon-wait hidden">{getText('loading.name')}</span>
            </td>
        {/if}
    </tr>
{/template}

/**
 * @param spaceLabel
 */
{template .spaceLabel}
    {call aui.labels.label}
        {param text: $spaceLabel/}
        {param extraClasses: 'space-label'/}
        {param url: '#space-search-result'/}
    {/call}
{/template}

/**
 * Just an ellipsis element
 */
{template .spaceLabelEllipsis}
    <span>&hellip;</span>
{/template}
