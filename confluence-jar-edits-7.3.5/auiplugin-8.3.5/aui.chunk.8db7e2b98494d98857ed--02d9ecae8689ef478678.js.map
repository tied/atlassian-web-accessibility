{"version":3,"sources":["webpack:///../src/js/aui/spinner.js"],"names":["__webpack_require__","_deprecation","_underscore","SIZE","SMALL","name","px","radius","MEDIUM","LARGE","DEFAULTS","filled","size","filledAttributeReplacementText","filledAttributeDeprecatedLogger","getMessageLogger","sinceVersion","removeInVersion","extraInfo","filledPropDeprecatedLogger","validateSize","result","toLowerCase","Object","keys","map","key","indexOf","refresh","element","_ref","find","s","_data","svg","querySelector","circle","setAttribute","circleSize","setSize","height","parent","parentNode","nodeType","selfDomRect","getBoundingClientRect","parentDomRect","parentMiddleTop","top","spinnerMiddleTop","style","setMiddleTop","removeMiddleTop","SpinnerEl","_skate2","default","template","innerHTML","attached","attributes","created","removed","data","newValue","prototype","this","__data","defaults","isFilled","removeAttribute","newSize"],"mappings":"gLAAA,wDAAAA,EAAA,SACAC,EAAAD,EAAA,QACAE,EAAAF,EAAA,QAiBA,IAAMG,GACFC,OACIC,KAAM,QACNC,GAAI,GACJC,OAAQ,GAEZC,QACIH,KAAM,SACNC,GAAI,GACJC,OAAQ,MAEZE,OACIJ,KAAM,QACNC,GAAI,GACJC,OAAQ,OAIVG,GACFC,QAAQ,EACRC,KAAMT,EAAKK,OAAOH,MAGhBQ,mLAIAC,GAAkC,EAAAb,EAAAc,kBAAiB,kCACrDC,aAAc,QACdC,gBAAiB,QACjBC,UAAWL,IAGTM,GAA6B,EAAAlB,EAAAc,kBAAiB,iCAChDC,aAAc,QACdC,gBAAiB,QACjBC,UAAWL,IAuBf,SAASO,EAAaR,GAClB,IAAIS,EAASlB,EAAKK,OAAOH,KACL,iBAATO,IACPA,EAAOA,EAAKU,cACUC,OAAOC,KAAKrB,GAAMsB,IAAI,SAAAC,GAAA,OAAOA,EAAIJ,gBAErCK,QAAQf,IAAS,IAC/BS,EAAST,IAIjB,OAAOS,EAmBX,SAASO,EAAQC,GAAS,IAAAC,GACC,EAAA5B,EAAA6B,MAAK5B,EAAM,SAAA6B,GAAA,OAAKA,EAAE3B,OAASwB,EAAQI,MAAMrB,QAAST,EAAKK,OAAtEF,EADcwB,EACdxB,GAAIC,EADUuB,EACVvB,QAjBhB,SAAiBsB,EAASjB,EAAML,GAC5B,IAAM2B,EAAML,EAAQM,cAAc,OAC5BC,EAASP,EAAQM,cAAc,UAErCD,EAAIG,aAAa,OAAQzB,GACzBsB,EAAIG,aAAa,SAAUzB,GAC3BsB,EAAIG,aAAa,QAASzB,GAC1BsB,EAAIG,aAAa,UAAjB,OAAmCzB,EAAnC,IAA2CA,GAE3C,IAAM0B,EAAa1B,EAAO,EAE1BwB,EAAOC,aAAa,KAAMC,GAC1BF,EAAOC,aAAa,KAAMC,GAC1BF,EAAOC,aAAa,IAAK9B,GAKzBgC,CAAQV,EAASvB,EAAIC,GAEjBsB,EAAQI,MAAMtB,OArDtB,SAAsBkB,EAASW,GAC3B,IAAMC,EAASZ,EAAQa,WAEvB,GAAID,GAA8B,IAApBA,EAAOE,SAAgB,CACjC,IAAMC,EAAcf,EAAQgB,wBACtBC,EAAgBL,EAAOI,wBAEvBE,EAAkBD,EAAcE,IAAMF,EAAcN,OAAS,EAC7DS,EAAmBL,EAAYI,IAAMR,EAAS,EAEpDX,EAAQM,cAAc,OAAOe,MAAMF,IAASD,EAAkBE,EAA9D,MA4CAE,CAAatB,EAASvB,GAvC9B,SAAyBuB,UACdA,EAAQM,cAAc,OAAOe,MAAMF,IAwCtCI,CAAgBvB,GAIxB,IAAMwB,GAAY,EAAAC,EAAAC,SAAM,eACpBC,SADmC,SAC1B3B,GACLA,EAAQ4B,UAAY,wFACpB7B,EAAQC,IAEZ6B,SALmC,SAK1B7B,GACLD,EAAQC,IAEZ8B,YACIhD,QAEIiD,QAAS,SAAS/B,GACdf,IACAe,EAAQI,MAAMtB,QAAS,EACvBiB,EAAQC,IAGZgC,QAAS,SAAShC,GACdA,EAAQI,MAAMtB,QAAS,EACvBiB,EAAQC,KAGhBjB,KAdQ,SAcHiB,EAASiC,GACVjC,EAAQI,MAAMrB,KAAOQ,EAAa0C,EAAKC,UACvCnC,EAAQC,KAGhBmC,WACI/B,YACI,OAAOgC,KAAKC,SAAWD,KAAKhC,OAAQ,EAAA/B,EAAAiE,aAAazD,KAErDuB,UAAU6B,GACN,OAAOG,KAAKC,OAASJ,GAGzBnD,WAAWyD,GACPjD,IACEiD,EAAWH,KAAK5B,aAAa,SAAU,IAAM4B,KAAKI,gBAAgB,WAExEzD,SAAS0D,GACL,IAAM1D,EAAOQ,EAAakD,GAC1BL,KAAK5B,aAAa,OAAQzB,iBAKvByC,IAEXlD","file":"aui.chunk.8db7e2b98494d98857ed--02d9ecae8689ef478678.js","sourcesContent":["import skate from './internal/skate';\nimport { getMessageLogger } from './internal/deprecation';\nimport { defaults, find } from 'underscore';\n\n/**\n * @typedef {\"small\"|\"medium\"|\"large\"} SpinnerSize\n */\n\n/**\n * @typedef {Object} SpinnerSizeConfig\n * @param {SpinnerSize} name\n * @param {number} px\n * @param {number} radius\n */\n\n/**\n * @enum {SpinnerSizeConfig}\n * @readonly\n */\nconst SIZE = {\n    SMALL: {\n        name: 'small',\n        px: 20,\n        radius: 9,\n    },\n    MEDIUM: {\n        name: 'medium',\n        px: 30,\n        radius: 13.5,\n    },\n    LARGE: {\n        name: 'large',\n        px: 50,\n        radius: 22.5,\n    },\n};\n\nconst DEFAULTS = {\n    filled: false,\n    size: SIZE.MEDIUM.name,\n};\n\nconst filledAttributeReplacementText = `Add CSS to the parent element of the <aui-spinner>.\nUse CSS flexbox or grid to vertically align it.\nSee https://css-tricks.com/centering-css-complete-guide/ for techniques.`;\n\nconst filledAttributeDeprecatedLogger = getMessageLogger('<aui-spinner> filled attribute', {\n    sinceVersion: '7.9.4',\n    removeInVersion: '9.0.0',\n    extraInfo: filledAttributeReplacementText\n});\n\nconst filledPropDeprecatedLogger = getMessageLogger('<aui-spinner> filled property', {\n    sinceVersion: '7.9.4',\n    removeInVersion: '9.0.0',\n    extraInfo: filledAttributeReplacementText\n});\n\n/** @deprecated */\nfunction setMiddleTop(element, height) {\n    const parent = element.parentNode;\n    // only operate on elements, not documentFragment or comment nodes, etc.\n    if (parent && parent.nodeType === 1) {\n        const selfDomRect = element.getBoundingClientRect();\n        const parentDomRect = parent.getBoundingClientRect();\n\n        const parentMiddleTop = parentDomRect.top + parentDomRect.height / 2;\n        const spinnerMiddleTop = selfDomRect.top + height / 2;\n\n        element.querySelector('svg').style.top = `${parentMiddleTop - spinnerMiddleTop}px`;\n    }\n}\n\n/** @deprecated */\nfunction removeMiddleTop(element) {\n    delete element.querySelector('svg').style.top;\n}\n\nfunction validateSize(size) {\n    let result = SIZE.MEDIUM.name;\n    if (typeof size === 'string') {\n        size = size.toLowerCase();\n        const possibleSizes = Object.keys(SIZE).map(key => key.toLowerCase());\n\n        if (possibleSizes.indexOf(size) > -1) {\n            result = size;\n        }\n    }\n\n    return result;\n}\n\nfunction setSize(element, size, radius) {\n    const svg = element.querySelector('svg');\n    const circle = element.querySelector('circle');\n\n    svg.setAttribute('size', size);\n    svg.setAttribute('height', size);\n    svg.setAttribute('width', size);\n    svg.setAttribute('viewBox', `0 0 ${size} ${size}`);\n\n    const circleSize = size / 2;\n\n    circle.setAttribute('cx', circleSize);\n    circle.setAttribute('cy', circleSize);\n    circle.setAttribute('r', radius);\n}\n\nfunction refresh(element) {\n    const { px, radius } = find(SIZE, s => s.name === element._data.size) || SIZE.MEDIUM;\n    setSize(element, px, radius);\n\n    if (element._data.filled) {\n        setMiddleTop(element, px);\n    } else {\n        removeMiddleTop(element);\n    }\n}\n\nconst SpinnerEl = skate('aui-spinner', {\n    template(element) {\n        element.innerHTML = '<div class=\"aui-spinner spinner\"><svg focusable=\"false\"><circle></circle></svg></div>';\n        refresh(element);\n    },\n    attached(element) {\n        refresh(element);\n    },\n    attributes: {\n        filled: {\n            /** @deprecated */\n            created: function(element) {\n                filledAttributeDeprecatedLogger();\n                element._data.filled = true;\n                refresh(element);\n            },\n            /** @deprecated */\n            removed: function(element) {\n                element._data.filled = false;\n                refresh(element);\n            }\n        },\n        size(element, data) {\n            element._data.size = validateSize(data.newValue);\n            refresh(element);\n        },\n    },\n    prototype: {\n        get _data() {\n            return this.__data || (this._data = defaults({}, DEFAULTS));\n        },\n        set _data(data) {\n            return this.__data = data;\n        },\n        /** @deprecated */\n        set filled(isFilled) {\n            filledPropDeprecatedLogger();\n            !!isFilled ? this.setAttribute('filled', '') : this.removeAttribute('filled');\n        },\n        set size(newSize) {\n            const size = validateSize(newSize);\n            this.setAttribute('size', size);\n        },\n    },\n});\n\nexport default SpinnerEl;\nexport {\n    SIZE\n};\n"],"sourceRoot":""}