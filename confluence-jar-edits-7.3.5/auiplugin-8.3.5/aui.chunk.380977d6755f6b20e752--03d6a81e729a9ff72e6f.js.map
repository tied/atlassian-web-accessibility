{"version":3,"sources":["webpack:///../src/js/aui/internal/widget.js"],"names":["name","Ctor","dataAttr","selectorOrOptions","maybeOptions","selector","options","$","isPlainObject","widget","$el","_jquery2","default","data","__webpack_require__"],"mappings":"8KAUe,SAAUA,EAAMC,GAC3B,IAAIC,EAAW,eAAiBF,EAChC,OAAO,SAAUG,EAAmBC,GAChC,IAAIC,EACAC,EACAC,UAAEC,cAAcL,GAChBG,EAAUH,GAEVE,EAAWF,EACXG,EAAUF,GAGd,IAEIK,EAFAC,EAAML,IAAY,EAAAM,EAAAC,SAAEP,GAYxB,OATKK,GAAQA,EAAIG,KAAKX,GAKlBO,EAASC,EAAIG,KAAKX,IAHlBQ,GADAD,EAAS,IAAIR,EAAKS,EAAKJ,QACVI,KACTG,KAAKX,EAAUO,GAMhBA,IAlCf,wDAAAK,EAAA","file":"aui.chunk.380977d6755f6b20e752--03d6a81e729a9ff72e6f.js","sourcesContent":["import $ from '../jquery';\n\n/**\n * @param {string} name The name of the widget to use in any messaging.\n * @param {function(new:{ $el: jQuery }, ?jQuery, ?Object)} Ctor\n *     A constructor which will only ever be called with \"new\". It must take a JQuery object as the first\n *     parameter, or generate one if not provided. The second parameter will be a configuration object.\n *     The returned object must have an $el property and a setOptions function.\n * @constructor\n */\nexport default function (name, Ctor) {\n    var dataAttr = '_aui-widget-' + name;\n    return function (selectorOrOptions, maybeOptions) {\n        var selector;\n        var options;\n        if ($.isPlainObject(selectorOrOptions)) {\n            options = selectorOrOptions;\n        } else {\n            selector = selectorOrOptions;\n            options = maybeOptions;\n        }\n\n        var $el = selector && $(selector);\n\n        var widget;\n        if (!$el || !$el.data(dataAttr)) {\n            widget = new Ctor($el, options || {});\n            $el = widget.$el;\n            $el.data(dataAttr, widget);\n        } else {\n            widget = $el.data(dataAttr);\n            // options are discarded if $el has already been constructed\n        }\n\n        return widget;\n    };\n}\n"],"sourceRoot":""}