{"version":3,"sources":["webpack:///./aui.component.form.date-select.js","webpack:///../src/js/aui/date-picker.js"],"names":["default","__webpack_require__","logger","_browser","datePickerCounter","DatePicker","field","baseOptions","initPolyfill","datePickerUUID","datePicker","$field","options","_jquery2","attr","getField","getOptions","handleFieldFocus","initCalendar","calendar","attributeHandler","handleDatePickerFocus","handleFieldBlur","handleFieldUpdate","isTrackingDatePickerFocus","popup","parentPopup","popupContents","hide","get","open","show","setDate","value","datepicker","getDate","setMin","setMax","i18nConfig","hint","$hint","addClass","append","text","childNodes","config","dateFormat","defaultDate","val","maxDate","minDate","nextText","onSelect","dateText","trigger","call","this","onChangeMonthYear","setTimeout","refresh","prevText","$","extend","firstDay","log","on","MutationObserver","mutationsList","forEach","mutation","attributeName","target","getAttribute","observe","attributes","event","$eventTarget","isTargetInput","closest","length","is","isTargetPopup","keyCode","ESCAPE","preventDefault","destroyPolyfill","disconnect","off","prototype","browserSupportsDateField","type","languageCode","localisations","InlineDialogEl","id","offset","left","window","innerWidth","calculateHorizontalAlignment","_datePickerPopup","e","overrideBrowserDefault","reset","reconfigure","newOptions","undefined","defaultOptions","supportsDateField","datepickerUI","W3C","dayNames","i18n","getText","dayNamesMin","isRTL","monthNames","showMonthAfterYear","yearSuffix","key","fn","picker","data","_typeof","_globalize2"],"mappings":"iWAGSA,WAHTC,EAAA,QACAA,EAAA,QACAA,EAAA,gTCFAA,EAAA,aACAA,EAAA,SACYC,0JAAZD,EAAA,SACAE,EAAAF,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,4DAEA,IAAIG,EAAoB,EAExB,SAASC,EAAYC,EAAOC,GAExB,IACIC,EAEAC,EAHAC,SAEAC,SAEAC,KA6TJ,OA3TAF,KACAD,EAAiBL,KAMjBO,GAAS,EAAAE,EAAAb,SAAEM,IACJQ,KAAK,mBAAoBL,GAMhCC,EAAWK,SAAW,WAClB,OAAOJ,GAGXD,EAAWM,WAAa,WACpB,OAAOJ,GAOXJ,EAAe,WAEX,IAIIS,EAEAC,EANAC,SACAC,SACAC,SACAC,SAEAC,SAEAC,SACAC,SACAC,SACAC,SAMJjB,EAAWkB,KAAO,WACdH,EAAMI,IAAI,GAAGC,MAAO,GAGxBpB,EAAWqB,KAAO,WACdN,EAAMI,IAAI,GAAGC,MAAO,GAGxBpB,EAAWsB,QAAU,SAAUC,QACH,IAAbd,GACPA,EAASe,WAAW,UAAWD,IAIvCvB,EAAWyB,QAAU,WACjB,QAAwB,IAAbhB,EACP,OAAOA,EAASe,WAAW,YAInCxB,EAAW0B,OAAS,SAAUH,GAC1B,QAAwB,IAAbd,EACP,OAAOA,EAASe,WAAW,SAAU,UAAWD,IAIxDvB,EAAW2B,OAAS,SAAUJ,GAC1B,QAAwB,IAAbd,EACP,OAAOA,EAASe,WAAW,SAAU,UAAWD,IAQxDf,EAAe,SAAUoB,GACrB,GAAI1B,EAAQ2B,KAAM,CACd,IAAIC,GAAQ,EAAA3B,EAAAb,SAAE,UAAUyC,SAAS,uBACjCD,EAAME,OAAO,WAAWC,KAAK/B,EAAQ2B,MACrCZ,EAAce,OAAOF,GAGzBrB,GAAW,EAAAN,EAAAb,SAAEyB,EAAMI,IAAI,GAAGe,WAAW,IACrC,IAAIC,GACAC,WAAclC,EAAQkC,WACtBC,YAAepC,EAAOqC,MACtBC,QAAWtC,EAAOG,KAAK,OACvBoC,QAAWvC,EAAOG,KAAK,OACvBqC,SAAY,IACZC,SAAY,SAAUC,GAClB1C,EAAOqC,IAAIK,GACX1C,EAAO2C,QAAQ,UACf5C,EAAWkB,OACXhB,EAAQwC,UAAYxC,EAAQwC,SAASG,KAAKC,KAAMH,IAEpDI,kBAAmB,WAEfC,WAAWjC,EAAMkC,QAAS,IAE9BC,SAAY,KAGhBC,UAAEC,OAAOjB,EAAQP,GAEb1B,EAAQmD,UAAY,IACpBlB,EAAOkB,SAAWnD,EAAQmD,eAGK,IAAxBpD,EAAOG,KAAK,SACnBZ,EAAO8D,IAAI,oFAGf7C,EAASe,WAAWW,IAGpB,EAAAhC,EAAAb,SAAE,QAAQiE,GAAG,UAAW5C,GACxBV,EAAOsD,GAAG,mBAAoB3C,GAC9BX,EAAOsD,GAAG,mCAAoC1C,IAG9CH,EAAmB,IAAI8C,iBAAiB,SAAUC,GAC9CA,EAAcC,QAAQ,SAASC,GACI,QAA3BA,EAASC,cACT5D,EAAW0B,OAAOiC,EAASE,OAAOC,aAAa,QACb,QAA3BH,EAASC,eAChB5D,EAAW2B,OAAOgC,EAASE,OAAOC,aAAa,aAI1CC,QAAQ9D,EAAO,IAAM+D,YAAY,KAOtDrD,EAAwB,SAAUsD,GAC9B,IAAIC,GAAe,EAAA/D,EAAAb,SAAE2E,EAAMJ,QACvBM,EAAgBD,EAAaE,QAAQnD,GAAeoD,QAAUH,EAAaI,GAAGrE,GAC9EsE,EAAgBL,EAAaE,QAAQ,yBAAyBC,OAGlE,IAAMF,IAAkBI,GAAkBN,EAAMO,UAAYA,UAAQC,OAGhE,OAFAzE,EAAWkB,YACXJ,GAA4B,GAI5BoD,EAAa,KAAOjE,EAAO,IAC3BgE,EAAMS,kBAId9D,EAAkB,WAERE,KACF,EAAAX,EAAAb,SAAE,QAAQiE,GAAG,6BAA8B,IAAK5C,GAChDG,GAA4B,IAIpCP,EAAmB,WACVQ,EAAM,GAAGK,MACVpB,EAAWqB,QAInBR,EAAoB,YACN,EAAAV,EAAAb,SAAEwD,MAAMR,OAOd7B,EAASe,WAAW,UAAWvB,EAAOqC,QAQ9CtC,EAAW2E,gBAAkB,WAGzB3E,EAAWkB,OAEPR,IACAA,EAAiBkE,aACjBlE,EAAmB,MAGvBT,EAAOG,KAAK,cAAe,MAE3BH,EAAO4E,IAAI,mCAAoChE,GAC/CZ,EAAO4E,IAAI,cAAetE,GAC1BN,EAAO4E,IAAI,mBAAoBjE,IAC/B,EAAAT,EAAAb,SAAE,QAAQuF,IAAI,UAAWjE,IACzB,EAAAT,EAAAb,SAAE,QAAQuF,IAAI,qCAAsClE,GAEhDhB,EAAWmF,UAAUC,2BACrB9E,EAAO,GAAG+E,KAAO,aAGG,IAAbvE,GACPA,EAASe,WAAW,kBAKjBxB,EAAW2E,uBAEX3E,EAAWqB,YACXrB,EAAWkB,MAQtBJ,GAA4B,EAOtBZ,EAAQ+E,gBAAgBtF,EAAWmF,UAAUI,gBAC/ChF,EAAQ+E,aAAe,IAE3B,IAAIrD,EAAajC,EAAWmF,UAAUI,cA2CtC,GAzCAjF,EAAOG,KAAK,gBAAiBL,IAE7BgB,EAAQ,IAAIoE,WACNC,GAAKrF,GACXgB,GAAQ,EAAAZ,EAAAb,SAAEyB,IACJX,KAAK,aAAc,IACzBW,EAAMX,KAAK,iBAAkB,SAC7BW,EAAMX,KAAK,YAAX,UAjBqC,SAAAH,GAEjC,OADiBA,EAAOoF,SAASC,KAAOC,OAAOC,WAAa,EACxC,OAAS,QAeCC,CAA6BxF,IAC/Dc,EAAMgB,SAAS,0BAEff,EAAcf,EAAOmE,QAAQ,qBAAqBjD,IAAI,MAElDH,EAAY0E,iBAAmB3E,GAC/B,EAAAZ,EAAAb,SAAE0B,GAAauC,GAAG,WAAY,SAAAoC,GACtB7E,GACA6E,EAAEjB,kBAEN,EAAAvE,EAAAb,SAAE,QAAQuF,IAAI,aAAc,IAAKlE,GAC7BK,GAAeA,EAAY0E,yBACpB1E,EAAY0E,qBAK/B,EAAAvF,EAAAb,SAAE,QAAQ0C,OAAOjB,QAEO,IAAbN,IACPQ,EAAgBF,EAChBP,EAAaoB,IAKjB3B,EAAOsD,GAAG,cAAehD,GAIzBN,EAAOG,KAAK,cAAeF,EAAQkC,YAI/BlC,EAAQ0F,wBAA0BjG,EAAWmF,UAAUC,yBAA0B,CACjF9E,EAAO,GAAG+E,KAAO,OAGjB,IAAIzD,EAAQtB,EAAO,GAAG6D,aAAa,SAC/BvC,IACAtB,EAAO,GAAGsB,MAAQA,KAM9BvB,EAAW6F,MAAQ,WAE2B,mBAA/B7F,EAAW2E,iBAClB3E,EAAW2E,kBAGRhF,EAAWmF,UAAUC,2BAA8B7E,EAAQ0F,wBAC9D9F,KAKRE,EAAW8F,YAAc,SAAUC,GAC/B7F,EAAUiD,UAAEC,YAAO4C,EAAWrG,EAAWmF,UAAUmB,eAAgBF,GACnE/F,EAAW6F,SAOf7F,EAAW8F,YAAYjG,GAEhBG,EAQXL,EAAWmF,UAAUC,0BAA2B,EAAAtF,EAAAyG,qBAEhDvG,EAAWmF,UAAUmB,gBACjBL,wBAAwB,EACxBvC,UAAW,EACX4B,cAAc,EAAA9E,EAAAb,SAAE,QAAQc,KAAK,SAAW,QACxCgC,WAAY+D,UAAaC,KA6B7BzG,EAAWmF,UAAUI,eACjBmB,UAAaC,UAAKC,QAAQ,iDACtBD,UAAKC,QAAQ,iDACbD,UAAKC,QAAQ,kDACbD,UAAKC,QAAQ,oDACbD,UAAKC,QAAQ,mDACbD,UAAKC,QAAQ,iDACbD,UAAKC,QAAQ,oDACjBC,aAAgBF,UAAKC,QAAQ,qDACzBD,UAAKC,QAAQ,qDACbD,UAAKC,QAAQ,sDACbD,UAAKC,QAAQ,wDACbD,UAAKC,QAAQ,uDACbD,UAAKC,QAAQ,qDACbD,UAAKC,QAAQ,wDACjBlD,SAAYiD,UAAKC,QAAQ,0CACzBE,MAAiE,SAAxDH,UAAKC,QAAQ,uCACtBG,YAAeJ,UAAKC,QAAQ,oDACxBD,UAAKC,QAAQ,qDACbD,UAAKC,QAAQ,kDACbD,UAAKC,QAAQ,kDACbD,UAAKC,QAAQ,gDACbD,UAAKC,QAAQ,iDACbD,UAAKC,QAAQ,iDACbD,UAAKC,QAAQ,mDACbD,UAAKC,QAAQ,sDACbD,UAAKC,QAAQ,oDACbD,UAAKC,QAAQ,qDACbD,UAAKC,QAAQ,sDACjBI,mBAA6F,SAAvEL,UAAKC,QAAQ,sDACnCK,WAAcN,UAAKC,QAAQ,6CAO/B,IAAMM,EAAM,iBAEZ1D,UAAE2D,GAAG9G,WAAa,SAAUE,GACxB,IAAI6G,EAASjE,KAAKkE,KAAKH,GAOvB,OANKE,EAGyB,iBAAnB,IAAO7G,EAAP,YAAA+G,EAAO/G,KACd6G,EAAOjB,YAAY5F,IAHnB6G,EAAS,IAAIpH,EAAWmD,KAAM5C,GAC9B4C,KAAKkE,KAAKH,EAAKE,IAIZA,IAGX,EAAAG,EAAA5H,SAAU,aAAcK,aAETA","file":"aui.chunk.dd3a7e41d6d8917c0780--9454bd24becdb1a72cbc.js","sourcesContent":["import './styles/aui.pattern.forms';\nimport './aui.component.inline-dialog2'; // so that the inline dialog styles get placed before date picker.\nimport '@atlassian/aui/src/less/aui-date-picker.less';\nexport { default as DatePicker } from '@atlassian/aui/src/js/aui/date-picker';\n","import $ from './jquery';\nimport datepickerUI from 'jquery-ui/ui/widgets/datepicker';\nimport * as logger from './internal/log';\nimport { supportsDateField } from './internal/browser';\nimport globalize from './internal/globalize';\nimport keyCode from './key-code';\nimport i18n from './i18n';\nimport InlineDialogEl from './inline-dialog2';\n\nlet datePickerCounter = 0;\n\nfunction DatePicker (field, baseOptions) {\n\n    let datePicker;\n    let initPolyfill;\n    let $field;\n    let datePickerUUID;\n    let options = {};\n\n    datePicker = {};\n    datePickerUUID = datePickerCounter++;\n\n    // ---------------------------------------------------------------------\n    // fix up arguments ----------------------------------------------------\n    // ---------------------------------------------------------------------\n\n    $field = $(field);\n    $field.attr('data-aui-dp-uuid', datePickerUUID);\n\n    // ---------------------------------------------------------------------\n    // expose arguments with getters ---------------------------------------\n    // ---------------------------------------------------------------------\n\n    datePicker.getField = function () {\n        return $field;\n    };\n\n    datePicker.getOptions = function () {\n        return options;\n    };\n\n    // ---------------------------------------------------------------------\n    // exposed methods -----------------------------------------------------\n    // ---------------------------------------------------------------------\n\n    initPolyfill = function () {\n\n        let calendar;\n        let attributeHandler;\n        let handleDatePickerFocus;\n        let handleFieldBlur;\n        let handleFieldFocus;\n        let handleFieldUpdate;\n        let initCalendar;\n        let isTrackingDatePickerFocus;\n        let popup;\n        let parentPopup;\n        let popupContents;\n\n        // -----------------------------------------------------------------\n        // expose methods for controlling the popup ------------------------\n        // -----------------------------------------------------------------\n\n        datePicker.hide = function () {\n            popup.get(0).open = false;\n        };\n\n        datePicker.show = function () {\n            popup.get(0).open = true;\n        };\n\n        datePicker.setDate = function (value) {\n            if (typeof calendar !== 'undefined') {\n                calendar.datepicker('setDate', value);\n            }\n        };\n\n        datePicker.getDate = function () {\n            if (typeof calendar !== 'undefined') {\n                return calendar.datepicker('getDate');\n            }\n        };\n\n        datePicker.setMin = function (value) {\n            if (typeof calendar !== 'undefined') {\n                return calendar.datepicker('option', 'minDate', value);\n            }\n        };\n\n        datePicker.setMax = function (value) {\n            if (typeof calendar !== 'undefined') {\n                return calendar.datepicker('option', 'maxDate', value);\n            }\n        };\n\n        // -----------------------------------------------------------------\n        // initialise the calendar -----------------------------------------\n        // -----------------------------------------------------------------\n\n        initCalendar = function (i18nConfig) {\n            if (options.hint) {\n                let $hint = $('<div/>').addClass('aui-datepicker-hint');\n                $hint.append('<span/>').text(options.hint);\n                popupContents.append($hint);\n            }\n\n            calendar = $(popup.get(0).childNodes[0]);\n            let config = {\n                'dateFormat': options.dateFormat,\n                'defaultDate': $field.val(),\n                'maxDate': $field.attr('max'),\n                'minDate': $field.attr('min'),\n                'nextText': '>',\n                'onSelect': function (dateText) {\n                    $field.val(dateText);\n                    $field.trigger('change');\n                    datePicker.hide();\n                    options.onSelect && options.onSelect.call(this, dateText);\n                },\n                onChangeMonthYear: function () {\n                    // defer rehresh call until current stack has cleared (after month has rendered)\n                    setTimeout(popup.refresh, 0);\n                },\n                'prevText': '<'\n            };\n\n            $.extend(config, i18nConfig);\n\n            if (options.firstDay > -1) {\n                config.firstDay = options.firstDay;\n            }\n\n            if (typeof $field.attr('step') !== 'undefined') {\n                logger.log('WARNING: The date picker polyfill currently does not support the step attribute!');\n            }\n\n            calendar.datepicker(config);\n\n            // bind additional field processing events\n            $('body').on('keydown', handleDatePickerFocus);\n            $field.on('focusout keydown', handleFieldBlur);\n            $field.on('propertychange keyup input paste', handleFieldUpdate);\n\n            // bind attribute handlers to account for html5 attributes\n            attributeHandler = new MutationObserver(function (mutationsList) {\n                mutationsList.forEach(function(mutation) {\n                    if (mutation.attributeName === 'min') {\n                        datePicker.setMin(mutation.target.getAttribute('min'));\n                    } else if (mutation.attributeName === 'max') {\n                        datePicker.setMax(mutation.target.getAttribute('max'));\n                    }\n                });\n            });\n            attributeHandler.observe($field[0], { attributes: true });\n        };\n\n        // -----------------------------------------------------------------\n        // event handler wrappers ------------------------------------------\n        // -----------------------------------------------------------------\n\n        handleDatePickerFocus = function (event) {\n            let $eventTarget = $(event.target);\n            let isTargetInput = $eventTarget.closest(popupContents).length || $eventTarget.is($field);\n            let isTargetPopup = $eventTarget.closest('.ui-datepicker-header').length;\n\n            // Hide if we're clicking anywhere else but the input or popup OR if esc is pressed.\n            if ((!isTargetInput && !isTargetPopup) || event.keyCode === keyCode.ESCAPE) {\n                datePicker.hide();\n                isTrackingDatePickerFocus = false;\n                return;\n            }\n\n            if ($eventTarget[0] !== $field[0]) {\n                event.preventDefault();\n            }\n        };\n\n        handleFieldBlur = function () {\n            // Trigger blur if event is keydown and esc OR is focusout.\n            if (!(isTrackingDatePickerFocus)) {\n                $('body').on('focus blur click mousedown', '*', handleDatePickerFocus);\n                isTrackingDatePickerFocus = true;\n            }\n        };\n\n        handleFieldFocus = function () {\n            if (!popup[0].open) {\n                datePicker.show();\n            }\n        };\n\n        handleFieldUpdate = function () {\n            let val = $(this).val();\n            // IE10/11 fire the 'input' event when internally showing and hiding\n            // the placeholder of an input. This was cancelling the inital click\n            // event and preventing the selection of the first date. The val check here\n            // is a workaround to assure we have legitimate user input that should update\n            // the calendar\n            if (val) {\n                calendar.datepicker('setDate', $field.val());\n            }\n        };\n\n        // -----------------------------------------------------------------\n        // undo (almost) everything ----------------------------------------\n        // -----------------------------------------------------------------\n\n        datePicker.destroyPolyfill = function () {\n\n            // goodbye, cruel world!\n            datePicker.hide();\n\n            if (attributeHandler) {\n                attributeHandler.disconnect();\n                attributeHandler = null;\n            }\n\n            $field.attr('placeholder', null);\n\n            $field.off('propertychange keyup input paste', handleFieldUpdate);\n            $field.off('focus click', handleFieldFocus);\n            $field.off('focusout keydown', handleFieldBlur);\n            $('body').off('keydown', handleFieldBlur);\n            $('body').off('focus blur click mousedown keydown', handleDatePickerFocus);\n\n            if (DatePicker.prototype.browserSupportsDateField) {\n                $field[0].type = 'date';\n            }\n\n            if (typeof calendar !== 'undefined') {\n                calendar.datepicker('destroy');\n            }\n\n            // TODO: figure out a way to tear down the popup (if necessary)\n\n            delete datePicker.destroyPolyfill;\n\n            delete datePicker.show;\n            delete datePicker.hide;\n\n        };\n\n        // -----------------------------------------------------------------\n        // polyfill bootstrap ----------------------------------------------\n        // -----------------------------------------------------------------\n\n        isTrackingDatePickerFocus = false; // used to prevent multiple bindings of handleDatePickerFocus within handleFieldBlur\n\n        const calculateHorizontalAlignment = $field => {\n            let inLeftHalf = $field.offset().left < window.innerWidth / 2;\n            return inLeftHalf ? 'left' : 'right';\n        };\n\n        if (!(options.languageCode in DatePicker.prototype.localisations)) {\n            options.languageCode = '';\n        }\n        let i18nConfig = DatePicker.prototype.localisations;\n\n        $field.attr('aria-controls', datePickerUUID);\n\n        popup = new InlineDialogEl();\n        popup.id = datePickerUUID;\n        popup = $(popup);\n        popup.attr('persistent', '');\n        popup.attr('data-aui-focus', 'false');\n        popup.attr('alignment', `bottom ${calculateHorizontalAlignment($field)}`);\n        popup.addClass('aui-datepicker-dialog');\n\n        parentPopup = $field.closest('aui-inline-dialog').get(0);\n        if (parentPopup) {\n            parentPopup._datePickerPopup = popup; // AUI-2696 - hackish coupling to control inline-dialog close behaviour.\n            $(parentPopup).on('aui-hide', e => {\n                if (isTrackingDatePickerFocus) {\n                    e.preventDefault();\n                }\n                $('body').off('focus blur', '*', handleDatePickerFocus);\n                if (parentPopup && parentPopup._datePickerPopup) {\n                    delete parentPopup._datePickerPopup;\n                }\n            });\n        }\n\n        $('body').append(popup);\n\n        if (typeof calendar === 'undefined') {\n            popupContents = popup;\n            initCalendar(i18nConfig);\n        }\n\n\n        // bind what we need to start off with\n        $field.on('focus click', handleFieldFocus); // the click is for fucking opera... Y U NO FIRE FOCUS EVENTS PROPERLY???\n\n        // give users a hint that this is a date field; note that placeholder isn't technically a valid attribute\n        // according to the spec...\n        $field.attr('placeholder', options.dateFormat);\n\n        // override the browser's default date field implementation (if applicable)\n        // since IE doesn't support date input fields, we should be fine...\n        if (options.overrideBrowserDefault && DatePicker.prototype.browserSupportsDateField) {\n            $field[0].type = 'text';\n\n            //workaround for this issue in Edge: https://connect.microsoft.com/IE/feedback/details/1603512/changing-an-input-type-to-text-does-not-set-the-value\n            let value = $field[0].getAttribute('value');    //can't use jquery to get the attribute because it doesn't work in Edge\n            if (value) {\n                $field[0].value = value;\n            }\n        }\n\n    };\n\n    datePicker.reset = function () {\n\n        if (typeof datePicker.destroyPolyfill === 'function') {\n            datePicker.destroyPolyfill();\n        }\n\n        if ((!(DatePicker.prototype.browserSupportsDateField)) || options.overrideBrowserDefault) {\n            initPolyfill();\n        }\n\n    };\n\n    datePicker.reconfigure = function (newOptions) {\n        options = $.extend(undefined, DatePicker.prototype.defaultOptions, newOptions);\n        datePicker.reset();\n    };\n\n    // ---------------------------------------------------------------------\n    // bootstrap -----------------------------------------------------------\n    // ---------------------------------------------------------------------\n\n    datePicker.reconfigure(baseOptions);\n\n    return datePicker;\n\n};\n\n// -------------------------------------------------------------------------\n// things that should be common --------------------------------------------\n// -------------------------------------------------------------------------\n\nDatePicker.prototype.browserSupportsDateField = supportsDateField();\n\nDatePicker.prototype.defaultOptions = {\n    overrideBrowserDefault: false,\n    firstDay: -1,\n    languageCode: $('html').attr('lang') || 'en-AU',\n    dateFormat: datepickerUI.W3C // same as $.datepicker.ISO_8601\n};\n\n// adapted from the jQuery UI Datepicker widget (v1.8.16), with the following changes:\n//   - dayNamesShort -> dayNamesMin\n//   - unnecessary attributes omitted\n/*\nCODE to extract codes out:\n\nvar langCode, langs, out;\nlangs = jQuery.datepicker.regional;\nout = {};\n\nfor (langCode in langs) {\n    if (langs.hasOwnProperty(langCode)) {\n        out[langCode] = {\n            'dayNames': langs[langCode].dayNames,\n            'dayNamesMin': langs[langCode].dayNamesShort, // this is deliberate\n            'firstDay': langs[langCode].firstDay,\n            'isRTL': langs[langCode].isRTL,\n            'monthNames': langs[langCode].monthNames,\n            'showMonthAfterYear': langs[langCode].showMonthAfterYear,\n            'yearSuffix': langs[langCode].yearSuffix\n        };\n    }\n}\n\n */\n\nDatePicker.prototype.localisations = {\n    'dayNames': [i18n.getText('ajs.datepicker.localisations.day-names.sunday'),\n        i18n.getText('ajs.datepicker.localisations.day-names.monday'),\n        i18n.getText('ajs.datepicker.localisations.day-names.tuesday'),\n        i18n.getText('ajs.datepicker.localisations.day-names.wednesday'),\n        i18n.getText('ajs.datepicker.localisations.day-names.thursday'),\n        i18n.getText('ajs.datepicker.localisations.day-names.friday'),\n        i18n.getText('ajs.datepicker.localisations.day-names.saturday')],\n    'dayNamesMin': [i18n.getText('ajs.datepicker.localisations.day-names-min.sunday'),\n        i18n.getText('ajs.datepicker.localisations.day-names-min.monday'),\n        i18n.getText('ajs.datepicker.localisations.day-names-min.tuesday'),\n        i18n.getText('ajs.datepicker.localisations.day-names-min.wednesday'),\n        i18n.getText('ajs.datepicker.localisations.day-names-min.thursday'),\n        i18n.getText('ajs.datepicker.localisations.day-names-min.friday'),\n        i18n.getText('ajs.datepicker.localisations.day-names-min.saturday')],\n    'firstDay': i18n.getText('ajs.datepicker.localisations.first-day'),\n    'isRTL': i18n.getText('ajs.datepicker.localisations.is-RTL') === 'true',\n    'monthNames': [i18n.getText('ajs.datepicker.localisations.month-names.january'),\n        i18n.getText('ajs.datepicker.localisations.month-names.february'),\n        i18n.getText('ajs.datepicker.localisations.month-names.march'),\n        i18n.getText('ajs.datepicker.localisations.month-names.april'),\n        i18n.getText('ajs.datepicker.localisations.month-names.may'),\n        i18n.getText('ajs.datepicker.localisations.month-names.june'),\n        i18n.getText('ajs.datepicker.localisations.month-names.july'),\n        i18n.getText('ajs.datepicker.localisations.month-names.august'),\n        i18n.getText('ajs.datepicker.localisations.month-names.september'),\n        i18n.getText('ajs.datepicker.localisations.month-names.october'),\n        i18n.getText('ajs.datepicker.localisations.month-names.november'),\n        i18n.getText('ajs.datepicker.localisations.month-names.december')],\n    'showMonthAfterYear': i18n.getText('ajs.datepicker.localisations.show-month-after-year') === 'true',\n    'yearSuffix': i18n.getText('ajs.datepicker.localisations.year-suffix')\n};\n\n\n// -------------------------------------------------------------------------\n// finally, integrate with jQuery for convenience --------------------------\n// -------------------------------------------------------------------------\nconst key = 'aui-datepicker';\n\n$.fn.datePicker = function (options) {\n    let picker = this.data(key);\n    if (!picker) {\n        picker = new DatePicker(this, options);\n        this.data(key, picker);\n    } else if (typeof options === 'object') {\n        picker.reconfigure(options);\n    }\n    return picker;\n};\n\nglobalize('DatePicker', DatePicker);\n\nexport default DatePicker;\n"],"sourceRoot":""}