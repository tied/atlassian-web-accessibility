{"version":3,"sources":["webpack:///../src/js/aui/event.js"],"names":["__webpack_require__","logger","EMPTY_SELECTOR","$target","_jquery2","default","window","bind","eventType","eventData","handler","on","e","log","message","unbind","off","trigger","extraParameters","_globalize2"],"mappings":"mMAAA,QAAAA,EAAA,SACYC,0JAAZD,EAAA,aACAA,EAAA,4DAEA,IAAME,GAAiB,EACjBC,GAAU,EAAAC,EAAAC,SAAEC,QAMlB,SAASC,EAAMC,EAAWC,EAAWC,GACjC,IACI,MAAuB,mBAAZA,EACAP,EAAQQ,GAAGH,EAAWN,EAAgBO,EAAWC,GAEjDP,EAAQQ,GAAGH,EAAWN,EAAgBO,GAEnD,MAAOG,GACLX,EAAOY,IAAI,wBAAyBD,EAAEE,UAQ9C,SAASC,EAAQP,EAAWE,GACxB,IACI,OAAOP,EAAQa,IAAIR,EAAWE,GAChC,MAAOE,GACLX,EAAOY,IAAI,0BAA2BD,EAAEE,UAQhD,SAASG,EAAST,EAAWU,GACzB,IACI,OAAOf,EAAQc,QAAQT,EAAWU,GACpC,MAAON,GACLX,EAAOY,IAAI,2BAA6BD,EAAEE,WAIlD,EAAAK,EAAAd,SAAU,OAAQE,IAClB,EAAAY,EAAAd,SAAU,UAAWY,IACrB,EAAAE,EAAAd,SAAU,SAAUU,KAGhBR,SACAQ,WACAE","file":"aui.chunk.63e6a1cbd2ee7c3bdf18--d4c49de0d5ac2c2697f8.js","sourcesContent":["import $ from './jquery';\nimport * as logger from './internal/log';\nimport globalize from './internal/globalize';\n\nconst EMPTY_SELECTOR = false;\nconst $target = $(window);\n\n/**\n * Binds events to the window object. See jQuery bind documentation for more\n * details. Exceptions are caught and logged.\n */\nfunction bind (eventType, eventData, handler) {\n    try {\n        if (typeof handler === 'function') {\n            return $target.on(eventType, EMPTY_SELECTOR, eventData, handler);\n        } else {\n            return $target.on(eventType, EMPTY_SELECTOR, eventData);\n        }\n    } catch (e) {\n        logger.log('error while binding: ', e.message);\n    }\n}\n\n/**\n * Unbinds event handlers from the window object. See jQuery unbind\n * documentation for more details. Exceptions are caught and logged.\n */\nfunction unbind (eventType, handler) {\n    try {\n        return $target.off(eventType, handler);\n    } catch (e) {\n        logger.log('error while unbinding: ', e.message);\n    }\n}\n\n/**\n * Triggers events on the window object. See jQuery trigger documentation for\n * more details. Exceptions are caught and logged.\n */\nfunction trigger (eventType, extraParameters) {\n    try {\n        return $target.trigger(eventType, extraParameters);\n    } catch (e) {\n        logger.log('error while triggering: ' + e.message);\n    }\n}\n\nglobalize('bind', bind);\nglobalize('trigger', trigger);\nglobalize('unbind', unbind);\n\nexport {\n    bind,\n    unbind,\n    trigger\n};\n"],"sourceRoot":""}