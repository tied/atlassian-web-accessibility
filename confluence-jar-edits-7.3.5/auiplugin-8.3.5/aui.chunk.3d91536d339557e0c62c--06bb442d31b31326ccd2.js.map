{"version":3,"sources":["webpack:///./aui.component.form-notification.js","webpack:///../src/js/aui/form-notification.js"],"names":["__webpack_require__","_tooltip","logger","CLASS_NOTIFICATION_INITIALISED","CLASS_NOTIFICATION_ICON","CLASS_TOOLTIP_ERROR","CLASS_TOOLTIP","CLASS_TOOLTIP_INFO","ATTRIBUTE_NOTIFICATION_WAIT","ATTRIBUTE_NOTIFICATION_PREFIX","ATTRIBUTE_NOTIFICATION_INFO","ATTRIBUTE_NOTIFICATION_ERROR","ATTRIBUTE_TOOLTIP_POSITION","NOTIFICATION_NAMESPACE","NOTIFICATION_PRIORITY","notificationFields","TOOLTIP_OPACITY","TOOLTIP_OFFSET_INSIDE_FIELD","TOOLTIP_OFFSET_OUTSIDE_FIELD","initialiseNotification","$field","isFieldInitialised","addClass","$icon","_jquery2","default","after","appendIconToField","prepareFieldMarkup","getTooltipAnchor","tooltip","gravity","position","data","gravityMap","warn","getTooltipGravity","title","getNotificationMessage","trigger","offset","unadornedInputFields","indexOf","attr","canContainIcon","opacity","className","notificationType","getFieldNotificationType","getNotificationClass","html","initialiseTooltip","focusTogglesTooltip","on","e","isNormalTab","fieldHasTooltip","$firstTooltipLink","getFirstTooltipLink","length","focus","preventDefault","bindFieldTabEvents","bindFieldEvents","synchroniseNotificationDisplay","push","hasClass","message","messageArray","jsonOrString","jsonArray","JSON","parse","exception","jsonToArray","join","formatMessage","fieldNotificationType","some","prioritisedNotification","is","showTooltip","getTooltip","leavingTooltipForwards","elementIsActive","find","last","getLastTooltipLink","leavingTooltipBackwards","keyCode","TAB","shiftKey","isShiftTab","bindTooltipTabEvents","hideTooltip","isFocusEventTargetInElement","event","$element","target","closest","altKey","first","maybeTooltip","document","addEventListener","forEach","field","isFocusTargetField","isFocusTargetChildOfField","tooltipEl","get","$","contains","side","top","bottom","next","getFieldIcon","$el","el","activeElement","isSpinnerVisible","isSpinnerForFieldAlreadyExisting","parent","remove","setFieldSpinner","each","$notificationField","this","targetIsThisField","_skate2","attached","element","attributes","attrs","type","skate","ATTRIBUTE","_amdify2"],"mappings":"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","file":"aui.chunk.3d91536d339557e0c62c--06bb442d31b31326ccd2.js","sourcesContent":["import './styles/aui.page.iconography';\nimport './styles/aui.pattern.icon';\nimport './styles/aui.pattern.forms';\nimport './aui.component.tooltip';\nimport '@atlassian/aui/src/less/form-notification.less';\nimport '@atlassian/aui/src/js/aui/form-notification.js';\nexport {};\n","import $ from './jquery';\nimport './tooltip';\nimport * as logger from './internal/log';\nimport amdify from './internal/amdify';\nimport keyCode from './key-code';\nimport skate from './internal/skate';\nimport { maybeTooltip } from './tooltip';\nimport './spinner'\n\nvar NOTIFICATION_NAMESPACE = 'aui-form-notification';\n\nvar CLASS_NOTIFICATION_INITIALISED = '_aui-form-notification-initialised';\nvar CLASS_NOTIFICATION_ICON = 'aui-icon-notification';\nvar CLASS_TOOLTIP = NOTIFICATION_NAMESPACE + '-tooltip';\nvar CLASS_TOOLTIP_ERROR = CLASS_TOOLTIP + '-error';\nvar CLASS_TOOLTIP_INFO = CLASS_TOOLTIP + '-info';\n\nvar ATTRIBUTE_NOTIFICATION_PREFIX = 'data-aui-notification-';\nvar ATTRIBUTE_NOTIFICATION_WAIT = ATTRIBUTE_NOTIFICATION_PREFIX + 'wait';\nvar ATTRIBUTE_NOTIFICATION_INFO = ATTRIBUTE_NOTIFICATION_PREFIX + 'info';\nvar ATTRIBUTE_NOTIFICATION_ERROR = ATTRIBUTE_NOTIFICATION_PREFIX + 'error';\nvar ATTRIBUTE_NOTIFICATION_SUCCESS = ATTRIBUTE_NOTIFICATION_PREFIX + 'success';\nvar ATTRIBUTE_TOOLTIP_POSITION = NOTIFICATION_NAMESPACE + '-position';\n\nvar NOTIFICATION_PRIORITY = [\n    ATTRIBUTE_NOTIFICATION_ERROR,\n    ATTRIBUTE_NOTIFICATION_SUCCESS,\n    ATTRIBUTE_NOTIFICATION_WAIT,\n    ATTRIBUTE_NOTIFICATION_INFO\n];\n\nvar notificationFields = [];\n\n/* --- Tooltip configuration --- */\nvar TOOLTIP_OPACITY = 1;\nvar TOOLTIP_OFFSET_INSIDE_FIELD = 9; //offset in px from the icon to the start of the tooltip\nvar TOOLTIP_OFFSET_OUTSIDE_FIELD = 3;\n\nfunction initialiseNotification($field) {\n    if (!isFieldInitialised($field)) {\n        prepareFieldMarkup($field);\n        initialiseTooltip($field);\n        bindFieldEvents($field);\n        synchroniseNotificationDisplay($field);\n    }\n\n    notificationFields.push($field);\n}\n\nfunction isFieldInitialised($field) {\n    return $field.hasClass(CLASS_NOTIFICATION_INITIALISED);\n}\n\nfunction constructFieldIcon(){\n    return $('<span class=\"aui-icon aui-icon-small ' + CLASS_NOTIFICATION_ICON + '\"/>');\n}\n\nfunction prepareFieldMarkup($field) {\n    $field.addClass(CLASS_NOTIFICATION_INITIALISED);\n    appendIconToField($field);\n}\n\nfunction appendIconToField($field) {\n    var $icon = constructFieldIcon();\n    $field.after($icon);\n}\n\nfunction initialiseTooltip($field) {\n    getTooltipAnchor($field).tooltip({\n        gravity: getTooltipGravity($field),\n        title: function () {\n            return getNotificationMessage($field);\n        },\n        trigger: 'manual',\n        offset: canContainIcon($field) ? TOOLTIP_OFFSET_INSIDE_FIELD : TOOLTIP_OFFSET_OUTSIDE_FIELD,\n        opacity: TOOLTIP_OPACITY,\n        className: function () {\n            return 'aui-form-notification-tooltip ' + getNotificationClass($field);\n        },\n        html: true\n    });\n}\n\n// A list of HTML5 input types that don't typically get augmented by the browser, so are safe to put icons inside of.\nvar unadornedInputFields = ['text', 'url', 'email', 'tel', 'password'];\n\nfunction canContainIcon($field) {\n    return unadornedInputFields.indexOf($field.attr('type')) !== -1;\n}\n\nfunction getNotificationMessage($field) {\n    var notificationType = getFieldNotificationType($field);\n    var message = notificationType ? $field.attr(notificationType) : '';\n    return formatMessage(message);\n}\n\nfunction formatMessage(message) {\n    if (message === '') {\n        return message;\n    }\n\n    var messageArray = jsonToArray(message);\n\n    if (messageArray.length === 1) {\n        return messageArray[0];\n    } else {\n        return '<ul><li>' + messageArray.join('</li><li>') + '</li></ul>';\n    }\n}\n\nfunction jsonToArray(jsonOrString) {\n    var jsonArray;\n    try {\n        jsonArray = JSON.parse(jsonOrString);\n    } catch (exception) {\n        jsonArray = [jsonOrString];\n    }\n    return jsonArray;\n}\n\nfunction getNotificationClass($field) {\n    var notificationType = getFieldNotificationType($field);\n\n    if (notificationType === ATTRIBUTE_NOTIFICATION_ERROR) {\n        return CLASS_TOOLTIP_ERROR;\n    } else if (notificationType === ATTRIBUTE_NOTIFICATION_INFO) {\n        return CLASS_TOOLTIP_INFO;\n    }\n}\n\nfunction getFieldNotificationType($field) {\n    var fieldNotificationType;\n    NOTIFICATION_PRIORITY.some(function (prioritisedNotification) {\n        if ($field.is('[' + prioritisedNotification + ']')) {\n            fieldNotificationType = prioritisedNotification;\n            return true;\n        }\n    });\n\n    return fieldNotificationType;\n}\n\nfunction bindFieldEvents($field) {\n    if (focusTogglesTooltip($field)) {\n        bindFieldTabEvents($field);\n    }\n}\n\nfunction focusTogglesTooltip($field) {\n    return $field.is(':aui-focusable');\n}\n\nfunction fieldHasTooltip($field) {\n    return getNotificationMessage($field) !== '';\n}\n\nfunction showTooltip($field) {\n    getTooltipAnchor($field).tooltip('show');\n    if (focusTogglesTooltip($field)) {\n        bindTooltipTabEvents($field);\n    }\n}\n\nfunction hideTooltip($field) {\n    getTooltipAnchor($field).tooltip('hide');\n}\n\nfunction bindFocusTooltipInteractions() {\n    document.addEventListener('focus', function (e) {\n        notificationFields.forEach(function (field) {\n            var $field = $(field);\n\n            if (!focusTogglesTooltip($field)) {\n                return;\n            }\n\n            var isFocusTargetField = $field.is(e.target);\n            var isFocusTargetChildOfField = isFocusEventTargetInElement(e, $field);\n\n            if (isFocusTargetField || isFocusTargetChildOfField) {\n                showTooltip($field);\n            } else {\n                var tooltipEl = getTooltip($field).get(0);\n                if (tooltipEl && !$.contains(tooltipEl, e.target)) {\n                    hideTooltip($field);\n                }\n            }\n        });\n    }, true);\n}\n\nbindFocusTooltipInteractions();\n\nfunction isFocusEventTargetInElement(event, $element) {\n    return $(event.target).closest($element).length > 0;\n}\n\nfunction bindFieldTabEvents($field) {\n    $field.on('keydown', function (e) {\n        if (isNormalTab(e) && fieldHasTooltip($field)) {\n            var $firstTooltipLink = getFirstTooltipLink($field);\n            if ($firstTooltipLink.length) {\n                $firstTooltipLink.focus();\n                e.preventDefault();\n            }\n        }\n    });\n}\n\nfunction isNormalTab(e) {\n    return e.keyCode === keyCode.TAB && !e.shiftKey && !e.altKey;\n}\n\nfunction isShiftTab(e) {\n    return e.keyCode === keyCode.TAB && e.shiftKey;\n}\n\nfunction getFirstTooltipLink($field) {\n    return getTooltip($field).find(':aui-tabbable').first();\n}\n\nfunction getLastTooltipLink($field) {\n    return getTooltip($field).find(':aui-tabbable').last();\n}\n\nfunction getTooltip($field) {\n    return maybeTooltip(getTooltipAnchor($field));\n}\n\nfunction bindTooltipTabEvents($field) {\n    var $tooltip = getTooltip($field);\n    $tooltip.on('keydown', function (e) {\n        var leavingTooltipForwards = elementIsActive(getLastTooltipLink($field));\n        var leavingTooltipBackwards = elementIsActive(getFirstTooltipLink($field));\n\n        if (isNormalTab(e) && leavingTooltipForwards) {\n            if (leavingTooltipForwards) {\n                $field.focus();\n            }\n        }\n        if (isShiftTab(e) && leavingTooltipBackwards) {\n            if (leavingTooltipBackwards) {\n                $field.focus();\n                e.preventDefault();\n            }\n        }\n    });\n}\n\nconst gravityMap = {\n    side: 'w',\n    top: 'se',\n    bottom: 'ne'\n};\n\nfunction getTooltipGravity($field) {\n    const position = $field.data(ATTRIBUTE_TOOLTIP_POSITION) || 'side';\n    let gravity = gravityMap[position];\n    if (!gravity) {\n        gravity = 'w';\n        logger.warn(`Invalid notification position: '${position}'. Valid options are \"side\", \"bottom, \"top\"`);\n    }\n    return gravity;\n}\n\nfunction getTooltipAnchor($field) {\n    return getFieldIcon($field);\n}\n\nfunction getFieldIcon($field) {\n    return $field.next('.' + CLASS_NOTIFICATION_ICON);\n}\n\nfunction elementIsActive($el) {\n    var el = ($el instanceof $) ? $el[0] : $el;\n    return el && el === document.activeElement;\n}\n\nfunction synchroniseNotificationDisplay(field) {\n    var $field = $(field);\n\n    if (!isFieldInitialised($field)) {\n        return;\n    }\n\n    var notificationType = getFieldNotificationType($field);\n\n    var showSpinner = notificationType === ATTRIBUTE_NOTIFICATION_WAIT;\n    setFieldSpinner($field, showSpinner);\n    var noNotificationOnField = !notificationType;\n    if (noNotificationOnField) {\n        hideTooltip($field);\n        return;\n    }\n\n    var message = getNotificationMessage($field);\n\n    var fieldContainsActiveElement = $.contains($field[0], document.activeElement);\n    var tooltipShouldBeVisible = (fieldContainsActiveElement || elementIsActive($field) || !focusTogglesTooltip($field));\n    if (tooltipShouldBeVisible && message) {\n        showTooltip($field);\n    } else {\n        hideTooltip($field);\n    }\n}\n\nfunction isSpinnerForFieldAlreadyExisting($field) {\n    return $field.next('aui-spinner').length > 0;\n}\n\nfunction setFieldSpinner($field, isSpinnerVisible) {\n    if (isSpinnerVisible && !isSpinnerForFieldAlreadyExisting($field)) {\n        $field.after('<aui-spinner class=\"form-notification-spinner\" size=\"small\"></aui-spinner>');\n    } else {\n        $field.parent().find('aui-spinner').remove();\n    }\n}\n\ndocument.addEventListener('mousedown', function (e) {\n    var isTargetLink = $(e.target).is('a');\n    if (isTargetLink) {\n        return;\n    }\n\n    var isTargetTooltip = $(e.target).closest('.aui-form-notification-tooltip').length > 0;\n    if (isTargetTooltip) {\n        return;\n    }\n\n    var $allNotificationFields = $('[data-aui-notification-field]');\n    $allNotificationFields.each(function () {\n        var $notificationField = $(this);\n\n        var targetIsThisField = $notificationField.is(e.target);\n        var isFocusTargetChildOfField = isFocusEventTargetInElement(e, $notificationField);\n\n        if (!targetIsThisField && !isFocusTargetChildOfField) {\n            hideTooltip($notificationField);\n        }\n        if (focusTogglesTooltip($notificationField)) {\n            hideTooltip($notificationField);\n        }\n    });\n});\n\nskate('data-aui-notification-field', {\n    attached: function (element) {\n        initialiseNotification($(element));\n    },\n    attributes: (function () {\n        var attrs = {};\n        NOTIFICATION_PRIORITY.forEach(function (type) {\n            attrs[type] = synchroniseNotificationDisplay;\n        });\n        return attrs;\n    }()),\n    type: skate.type.ATTRIBUTE\n});\n\namdify('aui/form-notification');\n"],"sourceRoot":""}