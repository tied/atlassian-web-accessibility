{"version":3,"sources":["webpack:///../src/js/aui/trigger.js","webpack:///../src/js/aui/internal/state.js"],"names":["getTrigger","setTrigger","element","trigger","validTrigger","nodeType","_state2","default","set","hasTrigger","doIfTrigger","callback","forEachTrigger","Array","prototype","forEach","call","findControllers","__webpack_require__","get","document","querySelectorAll","id","findControlled","getElementById","getAttribute","isEnabled","triggerMessage","e","component","message","events","click","target","$closestAnchor","_jquery2","closest","length","isNestedAnchor","preventDefault","keydown","key","data","keyCode","ENTER","SPACE","type","mouseenter","mouseleave","focus","blur","relatedTarget","activeElement","find","focusingToControlledElement","Object","keys","name","handler","on","currentTarget","which","undefined","msg","_skate2","skate","ATTRIBUTE","disable","this","setAttribute","enable","_amdify2","stateName","stateValue","_state"],"mappings":"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","file":"aui.chunk.3810a2ef9b2953c9bb18--9415d134156c90001a4c.js","sourcesContent":["import $ from './jquery';\nimport keyCode from './key-code';\nimport amdify from './internal/amdify';\nimport skate from './internal/skate';\nimport state from './internal/state';\n\nexport function getTrigger (element) {\n    return state(element).get('last-trigger') || findControllers(element)[0];\n}\n\nexport function setTrigger (element, trigger) {\n    var validTrigger = trigger && trigger.nodeType && trigger.nodeType === 1;\n    return state(element).set('last-trigger', validTrigger ? trigger : false);\n}\n\nexport function hasTrigger (element) {\n    return !!getTrigger(element);\n}\n\nexport function doIfTrigger (element, callback) {\n    var trigger = getTrigger(element);\n\n    if (trigger) {\n        callback(trigger);\n    }\n}\n\nexport function forEachTrigger (element, callback) {\n    return Array.prototype.forEach.call(findControllers(element), callback);\n}\n\nfunction isNestedAnchor(trigger, target) {\n    var $closestAnchor = $(target).closest('a[href]', trigger);\n    return !!$closestAnchor.length && $closestAnchor[0] !== trigger;\n}\n\nfunction findControllers(element) {\n    return document.querySelectorAll(`[aria-controls=\"${element.id}\"]`);\n}\n\nfunction findControlled(trigger) {\n    return document.getElementById(trigger.getAttribute('aria-controls'));\n}\n\nfunction isEnabled (element) {\n    return element.getAttribute('aria-disabled') !== 'true';\n}\n\nfunction triggerMessage(trigger, e) {\n    if (isEnabled(trigger)) {\n        var component = findControlled(trigger);\n        if (component && component.message) {\n            component.message(e);\n        }\n    }\n}\n\n/**\n * Converts native or jQuery events in to a \"message\" object.\n * Basically helps us keep message types consistent.\n */\nfunction msg(e, type) {\n    const { target, currentTarget, relatedTarget } = e;\n    const { keyCode, which } = e;\n    return {\n        type,\n        data: type === 'keydown' ? which || keyCode : undefined,\n        target,\n        currentTarget,\n        relatedTarget,\n        preventDefault: () => e.preventDefault()\n    };\n}\n\nfunction focusingToControlledElement(trigger, e) {\n    let relatedTarget = e.relatedTarget;\n    // relatedTarget is always null in IE11 but activeElement is set to correct value\n    if (!relatedTarget) {\n        relatedTarget = document.activeElement;\n    }\n    const $component = $(findControlled(trigger));\n    return $component.find(relatedTarget).length > 0;\n}\n\nconst events = {\n    click(trigger, e) {\n        if (!isNestedAnchor(trigger, e.target)) {\n            triggerMessage(trigger, e);\n            e.preventDefault();\n        }\n    },\n    keydown(trigger, e) {\n        const key = e.data;\n        if (key === keyCode.ENTER || key === keyCode.SPACE) {\n            e.preventDefault();\n            e.type = 'click';\n            events.click(trigger, e);\n        }\n    },\n    mouseenter(trigger, e) {\n        triggerMessage(trigger, e);\n    },\n    mouseleave(trigger, e) {\n        triggerMessage(trigger, e);\n    },\n    focus(trigger, e) {\n        triggerMessage(trigger, e);\n    },\n    blur(trigger, e) {\n        if (focusingToControlledElement(trigger, e)){\n            return;\n        }\n        triggerMessage(trigger, e);\n    }\n};\n\nObject.keys(events).forEach(function(name) {\n    const handler = events[name];\n    $(document).on(`${name}.aui-trigger`, '[data-aui-trigger]', function(e) {\n        handler(e.currentTarget, msg(e, name));\n    });\n});\n\nskate('data-aui-trigger', {\n    type: skate.type.ATTRIBUTE,\n    prototype: {\n        disable: function () {\n            this.setAttribute('aria-disabled', 'true');\n        },\n        enable: function () {\n            this.setAttribute('aria-disabled', 'false');\n        },\n        isEnabled: function () {\n            return isEnabled(this);\n        }\n    }\n});\n\namdify('aui/trigger');\n","\nfunction state (element) {\n    return {\n        /**\n         * sets an internal state on a component element\n         * @param element the element to which the state will be added\n         * @param stateName the name of the state\n         * @param stateValue the value that the state will be changed to\n         */\n        set: function (stateName, stateValue) {\n            if (element._state === undefined) {\n                element._state = {};\n            }\n\n            element._state[stateName] = stateValue;\n        },\n\n        /**\n         * gets an internal state on a component element\n         * @param element the element to which the state will be added\n         * @param stateName the name of the state\n         */\n        get: function (stateName) {\n            if (element._state) {\n                return element._state[stateName];\n            }\n        }\n    };\n}\n\nexport default state;\n"],"sourceRoot":""}