{"version":3,"sources":["webpack:///../src/js/aui/navigation.js","webpack:///./aui.component.nav.js"],"names":["__webpack_require__","Navigation","selector","this","$el","_jquery2","default","closest","length","map","idx","elm","data","$treeParent","parent","$subtreeToggleIcon","children","hideMoreItems","addClass","$selected","parents","add","filter","each","navigationWidget","expand","find","on","siblings","toggle","prototype","isNested","isCollapsed","attr","removeClass","collapse","is","moreText","i18n","getText","limit","Math","abs","parseInt","$listElements","lessThanTwoToHide","selectedElementPresent","alreadyInitialised","class","aria-hidden","append","href","text","click","e","preventDefault","remove","insertAfter","eq","_widget2","NavigationEl","_skate2","type","skate","CLASSNAME","attached","element","detached","removeData","_globalize2"],"mappings":"0LAAA,QAAAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,4DAWA,SAASC,EAAYC,GAIjB,GAHAC,KAAKC,KAAM,EAAAC,EAAAC,SAAEJ,GAAUK,QAAQ,YAG3BJ,KAAKC,IAAII,OAAS,EAClB,OAAOL,KAAKC,IAAIK,IAAI,SAAUC,EAAKC,GAC/B,OAAO,IAAIV,EAAWU,KACvB,GAIP,GAAIR,KAAKC,IAAIQ,KAAK,kBACd,OAAOT,KAAKC,IAAIQ,KAAK,kBAGzBT,KAAKC,IAAIQ,KAAK,iBAAkBT,MAEhCA,KAAKU,YAAcV,KAAKC,IAAIU,OAAO,qBACnCX,KAAKY,mBAAqBZ,KAAKU,YAC1BG,SAAS,2BACTA,SAAS,iBAGdb,KAAKc,gBAGLd,KAAKC,IAAIY,SAAS,6BAA6BE,SAAS,0BAGxD,IAAIC,EAAYhB,KAAKC,IAAIY,SAAS,qBAelC,OAdAG,EACKC,QAAQ,oCACRC,IAAIF,EAAUG,OAAO,0BACrBC,KAAK,WACQC,GAAiB,EAAAnB,EAAAC,SAAEH,MAAMa,SAAS,aACxCS,WAIZtB,KAAKC,IAAIsB,KAAK,iDAAiDC,GAAG,QAAS,WAC7DH,GAAiB,EAAAnB,EAAAC,SAAEH,MAAMyB,SAAS,aACxCC,WAGD1B,KAGXF,EAAW6B,UAAUC,SAAW,WAC5B,OAAmC,IAA5B5B,KAAKU,YAAYL,QAG5BP,EAAW6B,UAAUE,YAAc,WAC/B,MAAkD,UAA3C7B,KAAKU,YAAYoB,KAAK,kBAGjChC,EAAW6B,UAAUL,OAAS,WAM1B,OALAtB,KAAKU,YAAYoB,KAAK,gBAAiB,QACvC9B,KAAKY,mBACAmB,YAAY,0BACZhB,SAAS,yBACdf,KAAKc,gBACEd,MAGXF,EAAW6B,UAAUK,SAAW,WAK5B,OAJAhC,KAAKU,YAAYoB,KAAK,gBAAiB,SACvC9B,KAAKY,mBACAmB,YAAY,yBACZhB,SAAS,0BACPf,MAGXF,EAAW6B,UAAUD,OAAS,WAM1B,OALI1B,KAAK6B,cACL7B,KAAKsB,SAELtB,KAAKgC,WAEFhC,MAGXF,EAAW6B,UAAUb,cAAgB,WACjC,GAAId,KAAKC,IAAIgC,GAAG,mDAAoD,CAChE,IAAIC,EAAWlC,KAAKC,IAAI6B,KAAK,cAAgBK,UAAKC,QAAQ,sBACtDC,EAAQC,KAAKC,IAAIC,SAASxC,KAAKC,IAAI6B,KAAK,sBAAwB,EAChEW,EAAgBzC,KAAKC,IAAIY,SAAS,MAGlC6B,EAAoBD,EAAcpC,QAAUgC,EAAQ,EACpDM,EAAyBF,EAActB,OAAO,qBAAqBd,OACnEuC,EAAqBH,EAActB,OAAO,iBAAiBd,OAC/D,GAAIqC,GAAqBC,GAA0BC,EAC/C,OAAO5C,MAGX,EAAAE,EAAAC,SAAE,QACE0C,MAAS,eACTC,cAAe,SAChBC,QAAO,EAAA7C,EAAAC,SAAE,OACR6C,KAAQ,IACRH,MAAS,eACTI,KAAQf,EACRgB,MAAS,SAAUC,GACfA,EAAEC,kBACF,EAAAlD,EAAAC,SAAEH,MAAMW,SAAS0C,aAErBC,YAAYb,EAAcc,GAAGlB,EAAQ,IAG7C,OAAOrC,MAIX,IAAMqB,GAAmB,EAAAmC,EAAArD,SAAO,aAAcL,GAGxC2D,GAAe,EAAAC,EAAAvD,SAAM,WACvBwD,KAAMC,UAAMD,KAAKE,UACjBC,SAAU,SAAUC,GAChB,IAAIjE,EAAWiE,IAEnBC,SAAU,SAAUD,IAChB,EAAA7D,EAAAC,SAAE4D,GAASE,iBAInB,EAAAC,EAAA/D,SAAU,aAAckB,aAETA,IAEXoC,uRChJItD,yFAAuBsD,gBAD/B5D,EAAA","file":"aui.chunk.fe2aa6b961c51bfa53ae--2f924c293d2003883ef7.js","sourcesContent":["import i18n from './i18n';\nimport $ from './jquery';\nimport skate from './internal/skate';\nimport globalize from './internal/globalize';\nimport widget from './internal/widget';\n\n/**\n * Navigation (\".aui-nav\" elements).\n *\n * @param {(string|HtmlElement|jQuery)} selector - An expression\n *     representing a single .aui-nav element; you may also pass an expression\n *     for a descendent element, in which case the closest containing\n *     .aui-nav element is used.\n * @constructor\n */\nfunction Navigation (selector) {\n    this.$el = $(selector).closest('.aui-nav');\n\n    // If there are multiple objects, initialise them separately\n    if (this.$el.length > 1) {\n        return this.$el.map(function (idx, elm) {\n            return new Navigation(elm);\n        })[0];\n    }\n\n    // If already initialised, return existing object\n    if (this.$el.data('aui-navigation')) {\n        return this.$el.data('aui-navigation');\n    }\n\n    this.$el.data('aui-navigation', this);\n\n    this.$treeParent = this.$el.parent('li[aria-expanded]');\n    this.$subtreeToggleIcon = this.$treeParent\n        .children('.aui-nav-subtree-toggle')\n        .children('span.aui-icon');\n\n    // Hide extra items under a 'More...' link\n    this.hideMoreItems();\n\n    // Add child-selected class to relevant attributes\n    this.$el.children('li:has(.aui-nav-selected)').addClass('aui-nav-child-selected');\n\n    // Auto-expand if child is selected\n    var $selected = this.$el.children('.aui-nav-selected');\n    $selected\n        .parents('.aui-nav > [aria-expanded=false]')\n        .add($selected.filter('[aria-expanded=false]'))\n        .each(function () {\n            var nav = navigationWidget($(this).children('.aui-nav'));\n            nav.expand();\n        });\n\n    // Toggle expand on click\n    this.$el.find('> li[aria-expanded] > .aui-nav-subtree-toggle').on('click', function () {\n        var nav = navigationWidget($(this).siblings('.aui-nav'));\n        nav.toggle();\n    });\n\n    return this;\n}\n\nNavigation.prototype.isNested = function () {\n    return this.$treeParent.length === 1;\n};\n\nNavigation.prototype.isCollapsed = function () {\n    return this.$treeParent.attr('aria-expanded') === 'false';\n};\n\nNavigation.prototype.expand = function () {\n    this.$treeParent.attr('aria-expanded', 'true');\n    this.$subtreeToggleIcon\n        .removeClass('aui-iconfont-collapsed')\n        .addClass('aui-iconfont-expanded');\n    this.hideMoreItems();\n    return this;\n};\n\nNavigation.prototype.collapse = function () {\n    this.$treeParent.attr('aria-expanded', 'false');\n    this.$subtreeToggleIcon\n        .removeClass('aui-iconfont-expanded')\n        .addClass('aui-iconfont-collapsed');\n    return this;\n};\n\nNavigation.prototype.toggle = function () {\n    if (this.isCollapsed()) {\n        this.expand();\n    } else {\n        this.collapse();\n    }\n    return this;\n};\n\nNavigation.prototype.hideMoreItems = function () {\n    if (this.$el.is('.aui-nav:not([aria-expanded=false]) [data-more]')) {\n        var moreText = this.$el.attr('data-more') || i18n.getText('aui.words.moreitem');\n        var limit = Math.abs(parseInt(this.$el.attr('data-more-limit'))) || 5;\n        var $listElements = this.$el.children('li');\n\n        // Only add 'More...' if there is more than one element to hide and there are no selected elements\n        var lessThanTwoToHide = $listElements.length <= limit + 1;\n        var selectedElementPresent = $listElements.filter('.aui-nav-selected').length;\n        var alreadyInitialised = $listElements.filter('.aui-nav-more').length;\n        if (lessThanTwoToHide || selectedElementPresent || alreadyInitialised) {\n            return this;\n        }\n\n        $('<li>', {\n            'class': 'aui-nav-more',\n            'aria-hidden': 'true'\n        }).append($('<a>', {\n            'href': '#',\n            'class': 'aui-nav-item',\n            'text': moreText,\n            'click': function (e) {\n                e.preventDefault();\n                $(this).parent().remove();\n            }\n        })).insertAfter($listElements.eq(limit - 1));\n    }\n\n    return this;\n};\n\n\nconst navigationWidget = widget('navigation', Navigation);\n\n// Initialise nav elements\nconst NavigationEl = skate('aui-nav', {\n    type: skate.type.CLASSNAME,\n    attached: function (element) {\n        new Navigation(element);\n    },\n    detached: function (element) {\n        $(element).removeData();\n    }\n});\n\nglobalize('navigation', navigationWidget);\n\nexport default navigationWidget;\nexport {\n    NavigationEl\n};\n","import './styles/aui.pattern.nav';\nexport {default as navigation, NavigationEl} from '@atlassian/aui/src/js/aui/navigation';\n"],"sourceRoot":""}