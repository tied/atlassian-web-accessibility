{"version":3,"sources":["webpack:///./aui.component.message.js","webpack:///../src/js/aui/messages.js"],"names":["__webpack_require__","_messages","MessageEl","deprecate","logger","DEFAULT_FADEOUT_DURATION","DEFAULT_FADEOUT_DELAY","FADEOUT_RESTORE_DURATION","createMessageConstructor","type","messages","context","obj","closeable","title","toString","trim","$message","_ref","id","fadeout","body","html","_escapeHtml2","default","_jquery2","append","$","parseHTML","addClass","test","warn","attr","renderMessageElement","insertWhere","prependTo","insertBefore","insertAfter","appendTo","insertMessageIntoContext","insert","makeCloseable","makeFadeout","delay","duration","message","each","$this","this","$closeIcons","find","$icon","length","first","unbind","on","e","target","closest","closeMessage","which","keyCode","ENTER","SPACE","preventDefault","initCloseMessageBoxOnClickAndKeypress","hasFocus","isHover","fadeOut","stop","resetFadeOut","fadeTo","shouldStartFadeOut","focusin","focusout","hover","setup","createMessage","fn","hasClass","trigger","remove","document","_skate2","created","element","innerHTML","getAttribute","prop","extraInfo","_globalize2"],"mappings":"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","file":"aui.chunk.d56eb383bf5ccb93bfce--902e3ba5177e77e280ed.js","sourcesContent":["import './styles/aui.pattern.messages';\nimport { MessageEl } from '@atlassian/aui/src/js/aui/messages';\nexport { MessageEl };\n","import $ from './jquery';\nimport * as deprecate from './internal/deprecation';\nimport * as logger from './internal/log';\nimport globalize from './internal/globalize';\nimport escapeHtml from './escape-html';\nimport keyCode from './key-code';\nimport skate from './internal/skate';\n\nvar DEFAULT_FADEOUT_DURATION = 500;\nvar DEFAULT_FADEOUT_DELAY = 5000;\nvar FADEOUT_RESTORE_DURATION = 100;\n\nfunction createMessageConstructor(type) {\n    /**\n     *\n     * @param context\n     * @param {Object} obj - message configuration\n     * @param {String} [obj.id] - ID to add to the message.\n     * @param {String} [obj.title] - Plain-text title of the message. If provided, will appear above the message body.\n     * @param {String} obj.body - Content of the message. Can be HTML content.\n     * @param {boolean} [obj.closeable] - If true, the message can be manually closed by the end-user via the UI.\n     * @param {boolean} [obj.fadeout]\n     * @param {boolean} [obj.duration]\n     * @param {boolean} [obj.delay]\n     * @returns {*|HTMLElement}\n     */\n    messages[type] = function (context, obj) {\n        if (!obj) {\n            obj = context;\n            context = '#aui-message-bar';\n        }\n\n        // Set up our template options\n        obj.closeable = obj.closeable !== null && obj.closeable !== false;\n\n        // clean the title value\n        obj.title = (obj.title || '').toString().trim();\n\n        let $message = renderMessageElement(obj, type);\n        insertMessageIntoContext($message, obj.insert, context);\n\n        // Attach the optional extra behaviours\n        if (obj.closeable) {\n            makeCloseable($message);\n        }\n\n        if (obj.fadeout) {\n            makeFadeout($message, obj.delay, obj.duration);\n        }\n\n        return $message;\n    };\n}\n\nfunction makeCloseable(message) {\n    $(message || 'div.aui-message.closeable').each(function () {\n        var $this = $(this);\n        var $closeIcons = $this.find('.aui-icon.icon-close');\n        var $icon = $closeIcons.length > 0 ? $closeIcons.first() : $('<span class=\"aui-icon icon-close\" role=\"button\" tabindex=\"0\"></span>');\n\n        $this.addClass('closeable');\n        $this.append($icon);\n\n        initCloseMessageBoxOnClickAndKeypress($this);\n    });\n}\n\nfunction makeFadeout(message, delay, duration) {\n    delay = (typeof delay !== 'undefined') ? delay : DEFAULT_FADEOUT_DELAY;\n    duration = (typeof duration !== 'undefined') ? duration : DEFAULT_FADEOUT_DURATION;\n\n    $(message || 'div.aui-message.fadeout').each(function () {\n        var $this = $(this);\n\n        //Store the component state to avoid collisions between animations\n        var hasFocus = false;\n        var isHover = false;\n\n        //Small functions to keep the code easier to read and avoid code duplication\n        function fadeOut(){\n            //Algorithm:\n            //1. Stop all running animations (first arg), including any fade animation and delay\n            //   Do not jump to the end of the animation (second arg). This prevents the message to abruptly\n            //   jump to opacity:0 or opacity:1\n            //2. Wait <delay> ms before starting the fadeout\n            //3. Start the fadeout with a duration of <duration> ms\n            //4. Close the message at the end of the animation\n            $this.stop(true,false).delay(delay).fadeOut(duration, function () {\n                $this.closeMessage();\n            });\n        }\n        function resetFadeOut(){\n            //Algorithm:\n            //1. Stop all running animations (first arg), including any fade animation and delay\n            //   Do not jump to the end of the animation (second arg). This prevents the message to abruptly\n            //   jump to opacity:0 or opacity:1\n            //2. Fast animation to opacity:1\n            $this.stop(true,false).fadeTo(FADEOUT_RESTORE_DURATION, 1);\n        }\n        function shouldStartFadeOut(){\n            return !hasFocus && !isHover;\n        }\n\n        //Attach handlers for user interactions (focus and hover)\n        $this\n            .focusin(function () {\n                hasFocus = true;\n                resetFadeOut();\n            })\n            .focusout(function () {\n                hasFocus = false;\n                if (shouldStartFadeOut()) {\n                    fadeOut();\n                }\n            })\n            .hover(\n                function () {  //should be called .hoverin(), but jQuery does not implement that method\n                    isHover = true;\n                    resetFadeOut();\n                },\n                function () { //should be called .hoverout(), but jQuery does not implement that method\n                    isHover = false;\n                    if (shouldStartFadeOut()) {\n                        fadeOut();\n                    }\n                }\n            );\n\n        //Initial animation\n        fadeOut();\n    });\n}\n\n/**\n * Utility methods to display different message types to the user.\n * Usage:\n * <pre>\n * messages.info(\"#container\", {\n     *   title: \"Info\",\n     *   body: \"You can choose to have messages without Close functionality.\",\n     *   closeable: false,\n     * });\n * </pre>\n */\nvar messages = {\n    setup: function () {\n        makeCloseable();\n        makeFadeout();\n    },\n    makeCloseable: makeCloseable,\n    makeFadeout: makeFadeout,\n    createMessage: createMessageConstructor\n};\n\nfunction initCloseMessageBoxOnClickAndKeypress($message) {\n    $message.unbind('click.aui-message').unbind('keydown.aui-message');\n\n    $message.on('click.aui-message', '.aui-icon.icon-close', function (e) {\n        $(e.target).closest('.aui-message').closeMessage();\n    }).on('keydown.aui-message', '.aui-icon.icon-close', function (e) {\n        if ((e.which === keyCode.ENTER) || (e.which === keyCode.SPACE)) {\n            $(e.target).closest('.aui-message').closeMessage();\n            e.preventDefault(); // this is especially important when handling the space bar, as we don't want to page down\n        }\n    });\n}\n\nfunction insertMessageIntoContext($message, insertWhere, context) {\n    if (insertWhere === 'prepend') {\n        $message.prependTo(context);\n    }\n    else if (insertWhere === 'before') {\n        $message.insertBefore(context);\n    }\n    else if (insertWhere === 'after') {\n        $message.insertAfter(context);\n    }\n    else {\n        $message.appendTo(context);\n    }\n}\n\nfunction renderMessageElement ({id, closeable, fadeout, title, body}, type) {\n    // Convert the options in to template values\n    const titleHtml = title ? `<p class=\"title\"><strong>${escapeHtml(title)}</strong></p>` : '';\n    const html = `<div class=\"aui-message\">${titleHtml}</div>`;\n\n    // Construct the message element\n    const $message = $(html)\n        .append($.parseHTML(body || ''))\n        .addClass(closeable ? 'closeable' : '')\n        .addClass(fadeout ? 'fadeout' : '')\n        .addClass(`aui-message-${type}`);\n\n    // Add ID if supplied\n    if (id) {\n        if (/[#\\'\\\"\\.\\s]/g.test(id)) {\n            // reject IDs that don't comply with style guide (ie. they'll break stuff)\n            logger.warn('Messages error: ID rejected, must not include spaces, hashes, dots or quotes.');\n        } else {\n            $message.attr('id', id);\n        }\n    }\n\n    return $message;\n}\n\n$.fn.closeMessage = function () {\n    var $message = $(this);\n    if ($message.hasClass('aui-message') && $message.hasClass('closeable')) {\n        $message.stop(true); //Stop any running animation\n        $message.trigger('messageClose', [this]);  //messageClose event Deprecated as of 5.3\n        $message.remove();\n        $(document).trigger('aui-message-close', [this]);  //must trigger on document since the element has been removed\n    }\n};\n\ncreateMessageConstructor('generic'); //Deprecated Oct 2017\ncreateMessageConstructor('error');\ncreateMessageConstructor('warning');\ncreateMessageConstructor('info');\ncreateMessageConstructor('confirmation');\ncreateMessageConstructor('change');\ncreateMessageConstructor('success'); //Deprecated Oct 2017\ncreateMessageConstructor('hint'); //Deprecated Oct 2017\n\nconst MessageEl = skate('aui-message', {\n    created: function (element) {\n        var body = element.innerHTML;\n        var type = element.getAttribute('type') || 'info';\n\n        element.innerHTML = '';\n        messages[type](element, {\n            body: body,\n            closeable: element.getAttribute('closeable'),\n            delay: element.getAttribute('delay'),\n            duration: element.getAttribute('duration'),\n            fadeout: element.getAttribute('fadeout'),\n            title: element.getAttribute('title')\n        });\n    }\n});\n\n$(function () {\n    messages.setup();\n});\n\ndeprecate.prop(messages, 'makeCloseable', {\n    extraInfo: 'Use the \"closeable\" option in the constructor instead. Docs: https://aui.atlassian.com/latest/docs/messages.html'\n});\n\ndeprecate.prop(messages, 'createMessage', {\n    extraInfo: 'Use the provided convenience methods instead e.g. messages.info(). Docs: https://aui.atlassian.com/latest/docs/messages.html'\n});\n\ndeprecate.prop(messages, 'makeFadeout', {\n    extraInfo: 'Use the \"fadeout\" option in the constructor instead. Docs: https://aui.atlassian.com/latest/docs/messages.html'\n});\n\ndeprecate.prop(messages, 'generic', {\n    extraInfo: 'use the messages.info() method instead. Docs: https://aui.atlassian.com/latest/docs/messages.html'\n});\n\ndeprecate.prop(messages, 'hint', {\n    extraInfo: 'use the messages.info() method instead. Docs: https://aui.atlassian.com/latest/docs/messages.html'\n});\ndeprecate.prop(messages, 'success', {\n    extraInfo: 'use the messages.confirmation() method instead. Docs: https://aui.atlassian.com/latest/docs/messages.html'\n});\n\n// Exporting\n// ---------\nglobalize('messages', messages);\n\nexport default messages;\nexport {\n    MessageEl\n};\n"],"sourceRoot":""}