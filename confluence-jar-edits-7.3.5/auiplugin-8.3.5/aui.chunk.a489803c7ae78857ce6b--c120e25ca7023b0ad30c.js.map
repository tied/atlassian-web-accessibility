{"version":3,"sources":["webpack:///../src/js/aui/internal/attributes.js"],"names":["computeBooleanValue","attrValue","setBooleanAttribute","el","attr","newValue","setAttribute","removeAttribute","computeEnumValue","enumOptions","value","matchesEnumValue","enumValue","toLowerCase","isMissing","isInvalid","values","filter","length","hasOwnProperty","missingDefault","invalidDefault","setEnumAttribute","attribute"],"mappings":"iHAIO,SAASA,EAAoBC,GAChC,OAAqB,OAAdA,EAGJ,SAASC,EAAoBC,EAAIC,EAAMC,GACtCA,EACAF,EAAGG,aAAaF,EAAM,IAEtBD,EAAGI,gBAAgBH,GAIpB,SAASI,EAAiBC,EAAaC,GAC1C,IAAMC,EAAmB,SAAAC,GAAA,OAAaA,EAAUC,gBAAkBH,EAAMG,eAElEC,EAAsB,OAAVJ,EACZK,GAAaD,IAAcL,EAAYO,OAAOC,OAAON,GAAkBO,OAE7E,OAAIJ,EACIL,EAAYU,eAAe,kBACpBV,EAAYW,eAEhB,KAGPL,EACIN,EAAYU,eAAe,kBACpBV,EAAYY,eACZZ,EAAYU,eAAe,kBAC3BV,EAAYW,eAEhB,KAGJX,EAAYO,OAAOE,OAAST,EAAYO,OAAOC,OAAON,GAAkB,GAAK,KAIjF,SAASW,EAAiBnB,EAAIM,EAAaJ,GAC9CF,EAAGG,aAAaG,EAAYc,UAAWlB,sDAvC3BL,wBAIAE,wBAQAM,qBA0BAc,8BAaZtB,sBACAE,sBAEAM,mBACAc","file":"aui.chunk.a489803c7ae78857ce6b--c120e25ca7023b0ad30c.js","sourcesContent":["/**\n * Like el.hasAttribute(attr) but designed for use within a skate attribute\n * change handler where you only have access to change.oldValue.\n */\nexport function computeBooleanValue(attrValue) {\n    return attrValue !== null;\n}\n\nexport function setBooleanAttribute(el, attr, newValue) {\n    if (newValue) {\n        el.setAttribute(attr, '');\n    } else {\n        el.removeAttribute(attr);\n    }\n}\n\nexport function computeEnumValue(enumOptions, value) {\n    const matchesEnumValue = enumValue => enumValue.toLowerCase() === value.toLowerCase();\n\n    const isMissing = value === null;\n    const isInvalid = !isMissing && !enumOptions.values.filter(matchesEnumValue).length;\n\n    if (isMissing) {\n        if (enumOptions.hasOwnProperty('missingDefault')) {\n            return enumOptions.missingDefault;\n        }\n        return null;\n    }\n\n    if (isInvalid) {\n        if (enumOptions.hasOwnProperty('invalidDefault')) {\n            return enumOptions.invalidDefault;\n        } else if (enumOptions.hasOwnProperty('missingDefault')) {\n            return enumOptions.missingDefault;\n        }\n        return null;\n    }\n\n    return enumOptions.values.length ? enumOptions.values.filter(matchesEnumValue)[0] : null;\n}\n\n\nexport function setEnumAttribute(el, enumOptions, newValue) {\n    el.setAttribute(enumOptions.attribute, newValue);\n}\n\n/**\n * Helper functions useful for implementing reflected boolean and enumerated\n * attributes and properties.\n *\n * @see https://html.spec.whatwg.org/multipage/infrastructure.html#reflecting-content-attributes-in-idl-attributes\n * @see https://html.spec.whatwg.org/multipage/infrastructure.html#boolean-attribute\n * @see https://html.spec.whatwg.org/multipage/infrastructure.html#enumerated-attribute\n */\nexport default {\n    computeBooleanValue,\n    setBooleanAttribute,\n\n    computeEnumValue,\n    setEnumAttribute\n};\n"],"sourceRoot":""}