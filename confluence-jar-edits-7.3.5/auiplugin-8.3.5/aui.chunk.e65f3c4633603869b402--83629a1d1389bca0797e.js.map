{"version":3,"sources":["webpack:////buildeng/bamboo-agent-home/xml-data/build-dir/AUI-RELNEXT19-JOB1/aui/node_modules/skatejs-template-html/dist/template-html.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","DocumentFragment","window","elProto","HTMLElement","prototype","matchesSelector","matches","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","getData","element","name","__SKATE_TEMPLATE_HTML_DATA","setData","value","createFragmentFromString","domString","tag","match","div","document","createElement","caption","dd","dt","li","tbody","td","thead","tr","innerHTML","createFragmentFromNodeList","childNodes","nodeList","frag","createDocumentFragment","length","appendChild","getNodesBetween","startNode","endNode","nodes","nextNode","nextSibling","push","findChildrenMatchingSelector","sourceNode","selector","found","querySelectorAll","foundLength","filtered","a","node","parentNode","slice","call","addDefaultContent","content","defaultNodes","nodesLen","container","insertBefore","isDefault","removeDefaultContent","removeChild","createProxyProperty","get","bind","set","parseCommentNode","data","textContent","JSON","parse","e","Error","defaultContent","undefined","type","skateTemplateHtml","template","arguments","join","target","contentNodes","getElementsByTagName","contentData","contentNode","getAttribute","createComment","replaceChild","stringify","cacheContentData","wrap","parseNodeForContent","lastContentNode","childNodesLen","contentDatas","childNode","nodeType","contentInfo","concat","wrapper","wrapped","Object","defineProperty","wrapNodeWith","contentNodesLen","firstChild","this","html","outerHTML","targetFragment","b","foundNodes","c","lastChild","tagName","toLowerCase","attrs","attributes","attrsLength","attr","nodeName","nodeValue","childNodesLength","acceptsTextContent","createTextNode","fragChildNodes","forEach","contentSelector","insertAdjacentHTML","where","referenceNode","fragChildNodesLength","hasFoundReferenceNode","mainLoop","betweenNodes","betweenNodesLen","betweenNode","removed","newChild","oldChild","htmlTemplateParentWrapper","exports","__webpack_require__","module"],"mappings":"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","file":"aui.chunk.e65f3c4633603869b402--83629a1d1389bca0797e.js","sourcesContent":["(function () {\n  'use strict';\n\n  var DocumentFragment = window.DocumentFragment;\n  var elProto = window.HTMLElement.prototype;\n  var matchesSelector = (\n    elProto.matches ||\n    elProto.msMatchesSelector ||\n    elProto.webkitMatchesSelector ||\n    elProto.mozMatchesSelector ||\n    elProto.oMatchesSelector\n  );\n\n  function getData (element, name) {\n    if (element.__SKATE_TEMPLATE_HTML_DATA) {\n      return element.__SKATE_TEMPLATE_HTML_DATA[name];\n    }\n  }\n\n  function setData (element, name, value) {\n    if (!element.__SKATE_TEMPLATE_HTML_DATA) {\n      element.__SKATE_TEMPLATE_HTML_DATA = {};\n    }\n\n    element.__SKATE_TEMPLATE_HTML_DATA[name] = value;\n\n    return element;\n  }\n\n  function createFragmentFromString (domString) {\n    var specialMap = {\n      caption: 'table',\n      dd: 'dl',\n      dt: 'dl',\n      li: 'ul',\n      tbody: 'table',\n      td: 'tr',\n      thead: 'table',\n      tr: 'tbody'\n    };\n\n    var tag = domString.match(/\\s*<([^\\s>]+)/);\n    var div = document.createElement(tag && specialMap[tag[1]] || 'div');\n\n    div.innerHTML = domString;\n\n    return createFragmentFromNodeList(div.childNodes);\n  }\n\n  function createFragmentFromNodeList (nodeList) {\n    var frag = document.createDocumentFragment();\n\n    while (nodeList && nodeList.length) {\n      frag.appendChild(nodeList[0]);\n    }\n\n    return frag;\n  }\n\n  function getNodesBetween (startNode, endNode) {\n    var nodes = [];\n    var nextNode = startNode.nextSibling;\n\n    while (nextNode !== endNode) {\n      nodes.push(nextNode);\n      nextNode = nextNode.nextSibling;\n    }\n\n    return nodes;\n  }\n\n  function findChildrenMatchingSelector (sourceNode, selector) {\n    if (selector) {\n      var found = sourceNode.querySelectorAll(selector);\n      var foundLength = found.length;\n      var filtered = [];\n\n      for (var a = 0; a < foundLength; a++) {\n        var node = found[a];\n\n        if (node.parentNode === sourceNode) {\n          filtered.push(node);\n        }\n      }\n\n      return filtered;\n    }\n\n    return [].slice.call(sourceNode.childNodes) || [];\n  }\n\n  function htmlTemplateParentWrapper (element) {\n    var contentNodes = getData(element, 'content');\n    var contentNodesLen = contentNodes.length;\n\n    return {\n      childNodes: {\n        get: function () {\n          var nodes = [];\n\n          for (var a = 0; a < contentNodesLen; a++) {\n            var contentNode = contentNodes[a];\n\n            if (contentNode.isDefault) {\n              continue;\n            }\n\n            nodes = nodes.concat(getNodesBetween(contentNode.startNode, contentNode.endNode));\n          }\n\n          return nodes;\n        }\n      },\n\n      firstChild: {\n        get: function () {\n          var childNodes = this.childNodes;\n          return childNodes.length && childNodes[0] || null;\n        }\n      },\n\n      innerHTML: {\n        get: function () {\n          var html = '';\n          var childNodes = this.childNodes;\n          var childNodesLen = childNodes.length;\n\n          for (var a = 0; a < childNodesLen; a++) {\n            var childNode = childNodes[a];\n            html += childNode.outerHTML || childNode.textContent;\n          }\n\n          return html;\n        },\n        set: function (html) {\n          var targetFragment = createFragmentFromString(html);\n\n          for (var a = 0; a < contentNodesLen; a++) {\n            var contentNode = contentNodes[a];\n            var childNodes = getNodesBetween(contentNode.startNode, contentNode.endNode);\n\n            // Remove all nodes (including default content).\n            for (var b = 0; b < childNodes.length; b++) {\n              var childNode = childNodes[b];\n              childNode.parentNode.removeChild(childNode);\n            }\n\n            var foundNodes = findChildrenMatchingSelector(targetFragment, contentNode.selector);\n\n            // Add any matched nodes from the given HTML.\n            for (var c = 0; c < foundNodes.length; c++) {\n              contentNode.container.insertBefore(foundNodes[c], contentNode.endNode);\n            }\n\n            // If no nodes were found, set the default content.\n            if (foundNodes.length) {\n              removeDefaultContent(contentNode);\n            } else {\n              addDefaultContent(contentNode);\n            }\n          }\n        }\n      },\n\n      lastChild: {\n        get: function () {\n          for (var a = contentNodesLen - 1; a > -1; a--) {\n            var contentNode = contentNodes[a];\n\n            if (contentNode.isDefault) {\n              continue;\n            }\n\n            var childNodes = this.childNodes;\n            var childNodesLen = childNodes.length;\n\n            return childNodes[childNodesLen - 1];\n          }\n\n          return null;\n        }\n      },\n\n      outerHTML: {\n        get: function () {\n          var name = this.tagName.toLowerCase();\n          var html = '<' + name;\n          var attrs = this.attributes;\n\n          if (attrs) {\n            var attrsLength = attrs.length;\n\n            for (var a = 0; a < attrsLength; a++) {\n              var attr = attrs[a];\n              html += ' ' + attr.nodeName + '=\"' + attr.nodeValue + '\"';\n            }\n          }\n\n          html += '>';\n          html += this.innerHTML;\n          html += '</' + name + '>';\n\n          return html;\n        }\n      },\n\n      textContent: {\n        get: function () {\n          var textContent = '';\n          var childNodes = this.childNodes;\n          var childNodesLength = this.childNodes.length;\n\n          for (var a = 0; a < childNodesLength; a++) {\n            textContent += childNodes[a].textContent;\n          }\n\n          return textContent;\n        },\n        set: function (textContent) {\n          var acceptsTextContent;\n\n          // Removes all nodes (including default content).\n          this.innerHTML = '';\n\n          // Find the first content node without a selector.\n          for (var a = 0; a < contentNodesLen; a++) {\n            var contentNode = contentNodes[a];\n\n            if (!contentNode.selector) {\n              acceptsTextContent = contentNode;\n              break;\n            }\n          }\n\n          // There may be no content nodes that accept text content.\n          if (acceptsTextContent) {\n            if (textContent) {\n              removeDefaultContent(acceptsTextContent);\n              acceptsTextContent.container.insertBefore(document.createTextNode(textContent), acceptsTextContent.endNode);\n            } else {\n              addDefaultContent(acceptsTextContent);\n            }\n          }\n        }\n      },\n\n      appendChild: {\n        value: function (node) {\n          if (node instanceof DocumentFragment) {\n            var fragChildNodes = node.childNodes;\n\n            [].slice.call(fragChildNodes).forEach(function (node) {\n              this.appendChild(node);\n            }.bind(this));\n\n            return this;\n          }\n\n          for (var b = 0; b < contentNodesLen; b++) {\n            var contentNode = contentNodes[b];\n            var contentSelector = contentNode.selector;\n\n            if (!contentSelector || node instanceof window.HTMLElement && matchesSelector.call(node, contentSelector)) {\n              removeDefaultContent(contentNode);\n              contentNode.endNode.parentNode.insertBefore(node, contentNode.endNode);\n              break;\n            }\n          }\n\n          return this;\n        }\n      },\n\n      insertAdjacentHTML: {\n        value: function (where, html) {\n          if (where === 'afterbegin') {\n            this.insertBefore(createFragmentFromString(html), this.childNodes[0]);\n          } else if (where === 'beforeend') {\n            this.appendChild(createFragmentFromString(html));\n          } else {\n            element.insertAdjacentHTML(where, html);\n          }\n\n          return this;\n        }\n      },\n\n      insertBefore: {\n        value: function (node, referenceNode) {\n          // If no reference node is supplied, we append. This also means that we\n          // don't need to add / remove any default content because either there\n          // aren't any nodes or appendChild will handle it.\n          if (!referenceNode) {\n            return this.appendChild(node);\n          }\n\n          // Handle document fragments.\n          if (node instanceof DocumentFragment) {\n            var fragChildNodes = node.childNodes;\n\n            if (fragChildNodes) {\n              var fragChildNodesLength = fragChildNodes.length;\n\n              for (var a = 0; a < fragChildNodesLength; a++) {\n                this.insertBefore(fragChildNodes[a], referenceNode);\n              }\n            }\n\n            return this;\n          }\n\n          var hasFoundReferenceNode = false;\n\n          // There's no reason to handle default content add / remove because:\n          // 1. If no reference node is supplied, appendChild handles it.\n          // 2. If a reference node is supplied, there already is content.\n          // 3. If a reference node is invalid, an exception is thrown, but also\n          //    it's state would not change even if it wasn't.\n          mainLoop:\n          for (var b = 0; b < contentNodesLen; b++) {\n            var contentNode = contentNodes[b];\n            var betweenNodes = getNodesBetween(contentNode.startNode, contentNode.endNode);\n            var betweenNodesLen = betweenNodes.length;\n\n            for (var c = 0; c < betweenNodesLen; c++) {\n              var betweenNode = betweenNodes[c];\n\n              if (betweenNode === referenceNode) {\n                hasFoundReferenceNode = true;\n              }\n\n              if (hasFoundReferenceNode) {\n                var selector = contentNode.selector;\n\n                if (!selector || matchesSelector.call(node, selector)) {\n                  betweenNode.parentNode.insertBefore(node, betweenNode);\n                  break mainLoop;\n                }\n              }\n            }\n          }\n\n          // If no reference node was found as a child node of the element we must\n          // throw an error. This works for both no child nodes, or if the\n          // reference wasn't found to be a child node.\n          if (!hasFoundReferenceNode) {\n            throw new Error('DOMException 8: The node before which the new node is to be inserted is not a child of this node.');\n          }\n\n          return node;\n        }\n      },\n\n      removeChild: {\n        value: function (childNode) {\n          var removed = false;\n\n          for (var a = 0; a < contentNodesLen; a++) {\n            var contentNode = contentNodes[a];\n\n            if (contentNode.container === childNode.parentNode) {\n              contentNode.container.removeChild(childNode);\n              removed = true;\n              break;\n            }\n\n            if (contentNode.startNode.nextSibling === contentNode.endNode) {\n              addDefaultContent(contentNode);\n            }\n          }\n\n          if (!removed) {\n            throw new Error('DOMException 8: The node in which you are trying to remove is not a child of this node.');\n          }\n\n          return childNode;\n        }\n      },\n\n      replaceChild: {\n        value: function (newChild, oldChild) {\n          for (var a = 0; a < contentNodesLen; a++) {\n            var contentNode = contentNodes[a];\n\n            if (contentNode.container === oldChild.parentNode) {\n              contentNode.container.replaceChild(newChild, oldChild);\n              break;\n            }\n          }\n\n          return this;\n        }\n      }\n    };\n  }\n\n  function addDefaultContent (content) {\n    var nodes = content.defaultNodes;\n    var nodesLen = nodes.length;\n\n    for (var a = 0; a < nodesLen; a++) {\n      content.container.insertBefore(nodes[a], content.endNode);\n    }\n\n    content.isDefault = true;\n  }\n\n  function removeDefaultContent (content) {\n    var nodes = content.defaultNodes;\n    var nodesLen = nodes.length;\n\n    for (var a = 0; a < nodesLen; a++) {\n      var node = nodes[a];\n      node.parentNode.removeChild(node);\n    }\n\n    content.isDefault = false;\n  }\n\n  function createProxyProperty (node, name) {\n    return {\n      get: function () {\n        var value = node[name];\n\n        if (typeof value === 'function') {\n          return value.bind(node);\n        }\n\n        return value;\n      },\n\n      set: function (value) {\n        node[name] = value;\n      }\n    };\n  }\n\n  function wrapNodeWith (node, wrapper) {\n    var wrapped = {};\n\n    for (var name in node) {\n      var inWrapper = name in wrapper;\n\n      if (inWrapper) {\n        Object.defineProperty(wrapped, name, wrapper[name]);\n      } else {\n        Object.defineProperty(wrapped, name, createProxyProperty(node, name));\n      }\n    }\n\n    return wrapped;\n  }\n\n  function cacheContentData (node) {\n    var contentNodes = node.getElementsByTagName('content');\n    var contentNodesLen = contentNodes && contentNodes.length;\n\n    if (contentNodesLen) {\n      var contentData = [];\n\n      while (contentNodes.length) {\n        var contentNode = contentNodes[0];\n        var parentNode = contentNode.parentNode;\n        var selector = contentNode.getAttribute('select');\n        var startNode = document.createComment(' content ');\n        var endNode = document.createComment(' /content ');\n\n        contentData.push({\n          container: parentNode,\n          contentNode: contentNode,\n          defaultNodes: [].slice.call(contentNode.childNodes),\n          endNode: endNode,\n          isDefault: true,\n          selector: selector,\n          startNode: startNode\n        });\n\n        parentNode.replaceChild(endNode, contentNode);\n        parentNode.insertBefore(startNode, endNode);\n\n        // Cache data in the comment that can be read if no content information\n        // is cached. This allows seamless server-side rendering.\n        startNode.textContent += JSON.stringify({\n          defaultContent: contentNode.innerHTML,\n          selector: selector\n        }) + ' ';\n      }\n\n      setData(node, 'content', contentData);\n    }\n  }\n\n\n\n  // Content Parser\n  // --------------\n\n  function parseCommentNode (node) {\n    var data;\n    var matches = node.textContent.match(/^ (\\/?)content (.*)/i);\n\n    if (matches) {\n      if (matches[2]) {\n        try {\n          data = JSON.parse(matches[2]);\n        } catch (e) {\n          throw new Error('Unable to parse content comment data: \"' + e + '\" in \"<!--' + node.textContent + '-->\".');\n        }\n      }\n\n      return {\n        data: data || {\n          defaultContent: undefined,\n          isDefault: undefined,\n          selector: undefined\n        },\n        type: matches[1] ? 'close' : 'open'\n      };\n    }\n  }\n\n  function parseNodeForContent (node) {\n    var a;\n    var childNodes = node.childNodes;\n    var childNodesLen = childNodes.length;\n    var contentDatas = [];\n    var lastContentNode;\n\n    for (a = 0; a < childNodesLen; a++) {\n      var childNode = childNodes[a];\n\n      if (childNode.nodeType === 8) {\n        var contentInfo = parseCommentNode(childNode);\n\n        if (contentInfo) {\n          if (contentInfo.type === 'open') {\n            if (lastContentNode) {\n              throw new Error('Cannot have an opening content placeholder after another content placeholder at the same level in the DOM tree: \"' + childNode.textContent + '\" in \"' + childNode.parentNode.innerHTML + '\".');\n            }\n\n            lastContentNode = {\n              container: childNode.parentNode,\n              contentNode: childNode,\n              defaultNodes: contentInfo.data.defaultContent && createFragmentFromString(contentInfo.data.defaultContent).childNodes || [],\n              isDefault: contentInfo.data.isDefault,\n              selector: contentInfo.data.selector,\n              startNode: childNode\n            };\n          } else if (contentInfo.type === 'close') {\n            if (!lastContentNode) {\n              throw new Error('Unmatched closing content placeholder: \"' + childNode.textContent + '\" in \"' + childNode.parentNode.innerHTML + '\".');\n            }\n\n            lastContentNode.endNode = childNode;\n            contentDatas.push(lastContentNode);\n            lastContentNode = undefined;\n          }\n        }\n      } else {\n        contentDatas = contentDatas.concat(parseNodeForContent(childNode));\n      }\n    }\n\n    return contentDatas;\n  }\n\n\n\n  // Public API\n  // ----------\n\n  function skateTemplateHtml () {\n    var template = [].slice.call(arguments).join('');\n\n    return function (target) {\n      var frag = createFragmentFromNodeList(target.childNodes);\n\n      target.innerHTML = template;\n      cacheContentData(target);\n\n      if (frag.childNodes.length) {\n        skateTemplateHtml.wrap(target).appendChild(frag);\n      }\n    };\n  }\n\n  skateTemplateHtml.wrap = function (node) {\n    if (!getData(node, 'content')) {\n      setData(node, 'content', parseNodeForContent(node));\n    }\n\n    return wrapNodeWith(node, htmlTemplateParentWrapper(node));\n  };\n\n\n\n  // Exporting\n  // ---------\n\n  // Global.\n  window.skateTemplateHtml = skateTemplateHtml;\n\n  // AMD.\n  if (typeof define === 'function') {\n    define(function () {\n      return skateTemplateHtml;\n    });\n  }\n\n  // CommonJS.\n  if (typeof module === 'object') {\n    module.exports = skateTemplateHtml;\n  }\n})();\n"],"sourceRoot":""}