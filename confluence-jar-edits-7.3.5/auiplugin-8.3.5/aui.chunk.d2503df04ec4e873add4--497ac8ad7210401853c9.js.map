{"version":3,"sources":["webpack:///./aui.component.flag.js","webpack:///../src/js/aui/flag.js"],"names":["default","__webpack_require__","_animation","AUTO_CLOSE_TIME","ID_FLAG_CONTAINER","defaultOptions","body","close","title","type","flag","options","$","extend","toString","trim","$flag","_ref","html","_escapeHtml2","$message","_jquery2","append","parseHTML","addClass","renderFlagElement","closeFlag","extendFlagElement","makeCloseable","find","setTimeout","makeAutoClosable","findContainer","get","forEach","isFlagAriaHidden","getAttribute","remove","$flagContainer","length","prepend","appendTo","recomputeStyle","attr","insertFlag","$icon","on","e","which","keyCode","ENTER","SPACE","preventDefault","$flagToClose","setAttribute","dispatchEvent","CustomEvent","bubbles","_amdify2","_globalize2"],"mappings":"6UAESA,WAFTC,EAAA,QACAA,EAAA,4FCDA,QAAAA,EAAA,SACAC,EAAAD,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,4DAEA,IAAIE,EAAkB,IAClBC,EAAoB,qBACpBC,GACAC,KAAM,GACNC,MAAO,SACPC,MAAO,GACPC,KAAM,QAGV,SAASC,EAAMC,IACXA,EAAUC,UAAEC,UAAWR,EAAgBM,IAG/BH,OAASG,EAAQH,OAAS,IAAIM,WAAWC,OAEjD,IAAIC,EAuBR,SAAAC,GAAwD,IAA3BX,EAA2BW,EAA3BX,KAAME,EAAqBS,EAArBT,MAAOD,EAAcU,EAAdV,MAAOE,EAAOQ,EAAPR,KAEvCS,+BADYV,+BAAoC,EAAAW,EAAAnB,SAAWQ,GAA/C,gBAAuE,IACnF,SAEAY,GAAW,EAAAC,EAAArB,SAAEkB,GACdI,OAAOV,UAAEW,UAAUjB,GAAQ,KAC3BkB,SAAmB,UAAVjB,EAAoB,GAAK,aAClCiB,SAHY,eAGYf,GAC7B,OAAO,EAAAY,EAAArB,SAAE,gCAAgCsB,OAAOF,GA/BpCK,CAAkBd,GAY9B,OAGJ,SAA4BK,GACbA,EAAM,GAEZT,MAAQ,WACTmB,EAAUV,IAlBdW,CAAkBX,GAEI,SAAlBL,EAAQJ,OACRqB,EAAcZ,GA+CtB,SAA2BA,GACvBA,EAAMa,KAAK,gBAAgBL,SAAS,kBACpCM,WAAW,WACPd,EAAM,GAAGT,SACVJ,GAlDC4B,CAAiBf,IACQ,WAAlBL,EAAQJ,OACfqB,EAAcZ,GA6DDgB,IACUH,KAAK,aAEtBI,MAAMC,QAAQ,SAAUxB,GAC9B,IAAIyB,EAAwD,SAArCzB,EAAK0B,aAAa,eAErCD,IACA,EAAAd,EAAArB,SAAEU,GAAM2B,WASpB,SAAqBrB,GACjB,IAAIsB,EAAiBN,IAEhBM,EAAeC,SAChBD,GAAiB,EAAAjB,EAAArB,SAAE,YAAcI,EAAoB,aACrD,EAAAiB,EAAArB,SAAE,QAAQwC,QAAQF,IAMtB,OAHAtB,EAAMyB,SAASH,IACf,EAAApC,EAAAwC,gBAAe1B,GAERA,EAAM2B,KAAK,cAAe,SAAS,GAnFnCC,CAAW5B,GAsBtB,SAASY,EAAeZ,GACpB,IAAI6B,GAAQ,EAAAxB,EAAArB,SAAE,wEAad,OAXA6C,EAAMC,GAAG,QAAS,WACdpB,EAAUV,KAGd6B,EAAMC,GAAG,WAAY,SAAUC,GACtBA,EAAEC,QAAUC,UAAQC,OAAWH,EAAEC,QAAUC,UAAQE,QACpDzB,EAAUV,GACV+B,EAAEK,oBAIHpC,EAAMa,KAAK,gBAAgBP,OAAOuB,GAAO,GAUpD,SAASnB,EAAW2B,GAChB,IAAI3C,EAAO2C,EAAapB,IAAI,GAK5B,OAHAvB,EAAK4C,aAAa,cAAe,QACjC5C,EAAK6C,cAAc,IAAIC,UAAY,kBAAmBC,SAAS,KAExD/C,EAgBX,SAASsB,IACL,OAAO,EAAAX,EAAArB,SAAE,IAAMI,IAiBnB,EAAAsD,EAAA1D,SAAO,WAAYU,IACnB,EAAAiD,EAAA3D,SAAU,OAAQU,aACHA","file":"aui.chunk.d2503df04ec4e873add4--497ac8ad7210401853c9.js","sourcesContent":["import './aui.component.message';\nimport '@atlassian/aui/src/less/flag.less';\nexport { default as flag } from '@atlassian/aui/src/js/aui/flag';\n","import $ from './jquery';\nimport { recomputeStyle } from './internal/animation';\nimport amdify from './internal/amdify';\nimport globalize from './internal/globalize';\nimport keyCode from './key-code';\nimport CustomEvent from './polyfills/custom-event';\nimport escapeHtml from './escape-html';\n\nvar AUTO_CLOSE_TIME = 5000;\nvar ID_FLAG_CONTAINER = 'aui-flag-container';\nvar defaultOptions = {\n    body: '',\n    close: 'manual',\n    title: '',\n    type: 'info'\n};\n\nfunction flag (options) {\n    options = $.extend({}, defaultOptions, options);\n\n    // clean the title value\n    options.title = (options.title || '').toString().trim();\n\n    var $flag = renderFlagElement(options);\n    extendFlagElement($flag);\n\n    if (options.close === 'auto') {\n        makeCloseable($flag);\n        makeAutoClosable($flag);\n    } else if (options.close === 'manual') {\n        makeCloseable($flag);\n    }\n\n    pruneFlagContainer();\n\n    return insertFlag($flag);\n}\n\nfunction extendFlagElement ($flag) {\n    var flag = $flag[0];\n\n    flag.close = function () {\n        closeFlag($flag);\n    };\n}\n\nfunction renderFlagElement ({body, title, close, type}) {\n    const titleHtml = title ? `<p class=\"title\"><strong>${escapeHtml(title)}</strong></p>` : '';\n    const html = `<div class=\"aui-message\">${titleHtml}</div>`;\n\n    const $message = $(html)\n        .append($.parseHTML(body || ''))\n        .addClass(close === 'never' ? '' : 'closeable')\n        .addClass(`aui-message-${type}`);\n    return $('<div class=\"aui-flag\"></div>').append($message);\n}\n\nfunction makeCloseable ($flag) {\n    var $icon = $('<span class=\"aui-icon icon-close\" role=\"button\" tabindex=\"0\"></span>');\n\n    $icon.on('click', function () {\n        closeFlag($flag);\n    });\n\n    $icon.on('keypress', function (e) {\n        if ((e.which === keyCode.ENTER) || (e.which === keyCode.SPACE)) {\n            closeFlag($flag);\n            e.preventDefault();\n        }\n    });\n\n    return $flag.find('.aui-message').append($icon)[0];\n}\n\nfunction makeAutoClosable ($flag) {\n    $flag.find('.aui-message').addClass('aui-will-close');\n    setTimeout(function () {\n        $flag[0].close();\n    }, AUTO_CLOSE_TIME);\n}\n\nfunction closeFlag ($flagToClose) {\n    var flag = $flagToClose.get(0);\n\n    flag.setAttribute('aria-hidden', 'true');\n    flag.dispatchEvent(new CustomEvent('aui-flag-close', {bubbles: true}));\n\n    return flag;\n}\n\nfunction pruneFlagContainer () {\n    var $container = findContainer();\n    var $allFlags = $container.find('.aui-flag');\n\n    $allFlags.get().forEach(function (flag) {\n        var isFlagAriaHidden = flag.getAttribute('aria-hidden') === 'true';\n\n        if (isFlagAriaHidden) {\n            $(flag).remove();\n        }\n    });\n}\n\nfunction findContainer () {\n    return $('#' + ID_FLAG_CONTAINER);\n}\n\nfunction insertFlag ($flag) {\n    var $flagContainer = findContainer();\n\n    if (!$flagContainer.length) {\n        $flagContainer = $('<div id=\"' + ID_FLAG_CONTAINER + '\"></div>');\n        $('body').prepend($flagContainer);\n    }\n\n    $flag.appendTo($flagContainer);\n    recomputeStyle($flag);\n\n    return $flag.attr('aria-hidden', 'false')[0];\n}\n\namdify('aui/flag', flag);\nglobalize('flag', flag);\nexport default flag;\n"],"sourceRoot":""}