{"version":3,"sources":["webpack:///../src/js/aui/label.js","webpack:///./aui.component.form.label.js"],"names":["__webpack_require__","_constants","getLabel","element","querySelector","LabelEl","_skate2","default","template","_skatejsTemplateHtml2","created","_label","attached","_enforcer2","attributeExists","attributes","for","change","hasAttribute","setAttribute","newValue","INPUT_SUFFIX","removeAttribute","form","prototype","disabled","this","value","events","click","e","preventDefault"],"mappings":"iKAAA,QAAAA,EAAA,aACAA,EAAA,aACAA,EAAA,SACAC,EAAAD,EAAA,2DAEA,SAASE,EAASC,GACd,OAAOA,EAAQC,cAAc,SAmBjC,IAAMC,GAAU,EAAAC,EAAAC,SAAM,aAClBC,UAAU,EAAAC,EAAAF,SAAkB,sCAC5BG,QAAS,SAAUP,GACfA,EAAQQ,OAAST,EAASC,IAE9BS,SAAU,SAAUT,IAChB,EAAAU,EAAAN,SAAQJ,GAASW,gBAAgB,QAErCC,YACIC,IAzBR,SAAwBb,EAASc,GACzBd,EAAQe,aAAa,OACrBhB,EAASC,GAASgB,aAAa,MAA/B,GAAyCF,EAAOG,SAAWC,gBAE3DnB,EAASC,GAASmB,gBAAgB,QAsBlCC,KAlBR,SAAyBpB,EAASc,GAC1Bd,EAAQe,aAAa,QACrBhB,EAASC,GAASgB,aAAa,OAAQF,EAAOG,UAE9ClB,EAASC,GAASmB,gBAAgB,UAgBtCE,WACIC,eACI,OAAOC,KAAKR,aAAa,aAE7BO,aAAaE,GACLA,EACAD,KAAKP,aAAa,WAAY,IAE9BO,KAAKJ,gBAAgB,cAIjCM,QACIC,MAAO,SAAU1B,EAAS2B,GAClB3B,EAAQsB,UACRK,EAAEC,+BAMH1B,uQCzDNE,WADTP,EAAA","file":"aui.chunk.0c19293b6edd10082a76--1ee58d1cfc729d0b2a47.js","sourcesContent":["import skate from './internal/skate';\nimport skateTemplateHtml from 'skatejs-template-html';\nimport enforce from './internal/enforcer';\nimport { INPUT_SUFFIX } from './internal/constants';\n\nfunction getLabel(element) {\n    return element.querySelector('label');\n}\n\nfunction updateLabelFor(element, change) {\n    if (element.hasAttribute('for')) {\n        getLabel(element).setAttribute('for', `${change.newValue}${INPUT_SUFFIX}`);\n    } else {\n        getLabel(element).removeAttribute('for');\n    }\n}\n\nfunction updateLabelForm(element, change) {\n    if (element.hasAttribute('form')) {\n        getLabel(element).setAttribute('form', change.newValue);\n    } else {\n        getLabel(element).removeAttribute('form');\n    }\n}\n\nconst LabelEl = skate('aui-label', {\n    template: skateTemplateHtml('<label><content></content></label>'),\n    created: function (element) {\n        element._label = getLabel(element);    // required for quick access from test\n    },\n    attached: function (element) {\n        enforce(element).attributeExists('for');\n    },\n    attributes: {\n        'for': updateLabelFor,\n        form: updateLabelForm\n    },\n    prototype: {\n        get disabled() {\n            return this.hasAttribute('disabled');\n        },\n        set disabled(value) {\n            if (value) {\n                this.setAttribute('disabled', '');\n            } else {\n                this.removeAttribute('disabled');\n            }\n        }\n    },\n    events: {\n        click: function (element, e) {\n            if (element.disabled) {\n                e.preventDefault();\n            }\n        }\n    }\n});\n\nexport default LabelEl;\n","import './styles/aui.pattern.forms';\nexport { default as LabelEl } from '@atlassian/aui/src/js/aui/label';\n"],"sourceRoot":""}