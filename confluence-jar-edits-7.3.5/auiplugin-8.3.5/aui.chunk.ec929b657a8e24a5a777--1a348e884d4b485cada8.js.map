{"version":3,"sources":["webpack:///./deprecated/aui.behaviour.cookie.js","webpack:///../src/js/aui/cookie.js"],"names":["cookie","__webpack_require__","deprecate","COOKIE_NAME","UNESCAPE_COOKIE_REGEX","CONSECUTIVE_PIPE_CHARS_REGEX","ANY_QUOTE_REGEX","REGEX_SPECIAL_CHARS","regexEscape","str","replace","getCookieValue","name","reg","RegExp","res","document","match","unescapeCookieValue","save","value","expires","cookieValue","pair","length","addOrAppendToValue","days","d","ex","quotedValue","Date","setTime","toGMTString","saveCookie","read","defaultValue","getValueFromConglomerate","erase","_globalize2","default","prop","AJS","alternativeName","sinceVersion"],"mappings":"0KAAA,IAAYA,0JAAZC,EAAA,mBACeD,uICDf,IAAYE,0JAAZD,EAAA,6DACAA,EAAA,SAEA,IAAIE,EAAc,0BACdC,EAAwB,cACxBC,EAA+B,SAC/BC,EAAkB,KAClBC,EAAsB,qBAE1B,SAASC,EAAaC,GAClB,OAAOA,EAAIC,QAAQH,EAAqB,QAkC5C,SAASI,EAAgBC,GACrB,IAAIC,EAAM,IAAIC,OAAO,MAAQN,EAAYI,GAAQ,kCAC7CG,EAAMC,SAAShB,OAAOiB,MAAMJ,GAChC,OAAOE,GAPX,SAA8BH,GAC1B,OAAOA,EAAKF,QAAQN,EAAuB,IAM7Bc,CAAoBH,EAAI,IAuB1C,SAASI,EAAMP,EAAMQ,EAAOC,GACxB,IAAIC,EAAcX,EAAeR,GACjCmB,EAlDJ,SAA6BV,EAAMQ,EAAOE,GAGtC,IAAIT,EAAM,IAAIC,OAAO,gBAAkBN,EAAYI,GAAQ,cAK3D,GAFAU,GADAA,EAAcA,GAAe,IACHZ,QAAQG,EAAK,KAEzB,KAAVO,EAAc,CACd,IAAIG,EAAOX,EAAO,IAAMQ,EACpBE,EAAYE,OAASD,EAAKC,OAAS,OACnCF,GAAe,IAAMC,GAI7B,OAAOD,EAAYZ,QAAQL,EAA8B,KAmC3CoB,CAAmBb,EAAMQ,EAAOE,GAtBlD,SAAqBV,EAAMQ,EAAOM,GAC9B,IACIC,EADAC,EAAK,GAELC,EAAc,IAAMT,EAAMV,QAAQJ,EAAiB,OAAS,IAE5DoB,KACAC,EAAI,IAAIG,MACNC,SAASJ,EAAW,GAAPD,EAAY,GAAK,GAAK,KACrCE,EAAK,aAAeD,EAAEK,eAG1BhB,SAAShB,OAASY,EAAO,IAAMiB,EAAcD,EAAK,UAYlDK,CAAW9B,EAAamB,EAAaD,GAAW,KAQpD,SAASa,EAAMtB,EAAMuB,GACjB,IACIf,EAtER,SAAmCR,EAAMU,GAErCA,EAAcA,GAAe,GAC7B,IAAIT,EAAM,IAAIC,OAAON,EAAYI,GAAQ,YACrCG,EAAMO,EAAYL,MAAMJ,GAC5B,OAAOE,GAAOA,EAAI,GAiENqB,CAAyBxB,EADnBD,EAAeR,IAEjC,OAAa,MAATiB,EACOA,EAEJe,EAOX,SAASE,EAAOzB,GACZO,EAAKP,EAAM,IAGf,IAAIZ,GACAqC,MAAOA,EACPH,KAAMA,EACNf,KAAMA,IAGV,EAAAmB,EAAAC,SAAU,SAAUvC,IACpB,EAAAsC,EAAAC,SAAU,SAAUvC,GAEpBE,EAAUsC,KAAKC,IAAK,UAChBC,gBAAiB,SACjBC,aAAc,YAIdN,UACAH,SACAf","file":"aui.chunk.ec929b657a8e24a5a777--1a348e884d4b485cada8.js","sourcesContent":["import * as cookie from '../../src/js/aui/cookie';\nexport default cookie;\n","import * as deprecate from './internal/deprecation';\nimport globalize from './internal/globalize';\n\nvar COOKIE_NAME = 'AJS.conglomerate.cookie';\nvar UNESCAPE_COOKIE_REGEX = /(\\\\|^\"|\"$)/g;\nvar CONSECUTIVE_PIPE_CHARS_REGEX = /\\|\\|+/g;\nvar ANY_QUOTE_REGEX = /\"/g;\nvar REGEX_SPECIAL_CHARS = /[.*+?|^$()[\\]{\\\\]/g;\n\nfunction regexEscape (str) {\n    return str.replace(REGEX_SPECIAL_CHARS, '\\\\$&');\n}\n\nfunction getValueFromConglomerate (name, cookieValue) {\n    // A null cookieValue is just the first time through so create it.\n    cookieValue = cookieValue || '';\n    var reg = new RegExp(regexEscape(name) + '=([^|]+)');\n    var res = cookieValue.match(reg);\n    return res && res[1];\n}\n\n// Either append or replace the value in the cookie string/\nfunction addOrAppendToValue (name, value, cookieValue) {\n    // A cookie name follows after any amount of white space mixed with any amount of '|' characters.\n    // A cookie value is preceded by '=', then anything except for '|'.\n    var reg = new RegExp('(\\\\s|\\\\|)*\\\\b' + regexEscape(name) + '=[^|]*[|]*');\n\n    cookieValue = cookieValue || '';\n    cookieValue = cookieValue.replace(reg, '|');\n\n    if (value !== '') {\n        var pair = name + '=' + value;\n        if (cookieValue.length + pair.length < 4020) {\n            cookieValue += '|' + pair;\n        }\n    }\n\n    return cookieValue.replace(CONSECUTIVE_PIPE_CHARS_REGEX, '|');\n}\n\nfunction unescapeCookieValue (name) {\n    return name.replace(UNESCAPE_COOKIE_REGEX, '');\n}\n\nfunction getCookieValue (name) {\n    var reg = new RegExp('\\\\b' + regexEscape(name) + '=((?:[^\\\\\\\\;]+|\\\\\\\\.)*)(?:;|$)');\n    var res = document.cookie.match(reg);\n    return res && unescapeCookieValue(res[1]);\n}\n\nfunction saveCookie (name, value, days) {\n    var ex = '';\n    var d;\n    var quotedValue = '\"' + value.replace(ANY_QUOTE_REGEX, '\\\\\"') + '\"';\n\n    if (days) {\n        d = new Date();\n        d.setTime(+d + days * 24 * 60 * 60 * 1000);\n        ex = '; expires=' + d.toGMTString();\n    }\n\n    document.cookie = name + '=' + quotedValue + ex + ';path=/';\n}\n\n/**\n * Save a cookie.\n * @param name {String} name of cookie\n * @param value {String} value of cookie\n * @param expires {Number} number of days before cookie expires\n */\nfunction save (name, value, expires) {\n    var cookieValue = getCookieValue(COOKIE_NAME);\n    cookieValue = addOrAppendToValue(name, value, cookieValue);\n    saveCookie(COOKIE_NAME, cookieValue, expires || 365);\n}\n\n/**\n * Get the value of a cookie.\n * @param name {String} name of cookie to read\n * @param defaultValue {String} the default value of the cookie to return if not found\n */\nfunction read (name, defaultValue) {\n    var cookieValue = getCookieValue(COOKIE_NAME);\n    var value = getValueFromConglomerate(name, cookieValue);\n    if (value != null) {\n        return value;\n    }\n    return defaultValue;\n}\n\n/**\n * Remove the given cookie.\n * @param name {String} the name of the cookie to remove\n */\nfunction erase (name) {\n    save(name, '');\n}\n\nvar cookie = {\n    erase: erase,\n    read: read,\n    save: save\n};\n\nglobalize('cookie', cookie);\nglobalize('Cookie', cookie);\n\ndeprecate.prop(AJS, 'Cookie', {\n    alternativeName: 'cookie',\n    sinceVersion: '5.8.0'\n});\n\nexport {\n    erase,\n    read,\n    save\n};\n"],"sourceRoot":""}