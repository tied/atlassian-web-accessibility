{"version":3,"sources":["webpack:////buildeng/bamboo-agent-home/xml-data/build-dir/AUI-RELNEXT19-JOB1/aui/node_modules/@atlassian/tipsy/src/javascripts/jquery.tipsy.js"],"names":["$","maybeCall","thing","ctx","call","isElementInDOM","ele","el","jquery","get","contains","document","documentElement","tipsyIDcounter","Tipsy","element","options","this","$element","enabled","fixTitle","prototype","show","title","getTitle","$tip","tip","find","html","className","remove","css","top","left","visibility","display","appendTo","body","that","hoverable","hover","hoverTooltip","hoverState","trigger","eventOut","addClass","pos","extend","offset","width","getBoundingClientRect","height","tipCss","actualWidth","offsetWidth","actualHeight","offsetHeight","gravity","length","charAt","fade","stop","opacity","animate","aria","$tipID","attr","destroy","removeData","unbindHandlers","hide","live","off","fadeOut","removeAttr","$e","o","replace","fallback","data","validate","parentNode","enable","disable","toggleEnabled","fn","tipsy","defaults","delayOut","selector","Error","console","warn","elementOptions","enter","delayIn","setTimeout","leave","each","eventIn","on","revalidate","pointee","metadata","autoNS","scrollTop","window","autoWE","scrollLeft","autoBounds","margin","prefer","dir","ns","ew","boundTop","boundLeft","$this","jQuery"],"mappings":"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","file":"aui.chunk.50cbdc5762c9f7cc6786--38cd65f9ba2552295c90.js","sourcesContent":["// tipsy, facebook style tooltips for jquery\n// version 1.3.1\n// (c) 2008-2010 jason frame [jason@onehackoranother.com]\n// released under the MIT license\n//\n// Modified by Atlassian\n// https://github.com/atlassian/tipsy\n\n(function($) {\n    var liveBindingWarning = \"To be compatible with jQuery 1.9 and higher,\";\n    \" You must pass a selector to tipsy's live argument.\" +\n        \" For instance, `$(document).tipsy({live: 'a.live'});`\";\n\n    function maybeCall(thing, ctx) {\n        return typeof thing == \"function\" ? thing.call(ctx) : thing;\n    }\n\n    function isElementInDOM(ele) {\n        var el = ele && ele.jquery ? ele.get(0) : ele;\n        return $.contains(document.documentElement, el);\n    }\n\n    var tipsyIDcounter = 0;\n    function tipsyID() {\n        var tipsyID = tipsyIDcounter++;\n        return \"tipsyuid\" + tipsyID;\n    }\n\n    function Tipsy(element, options) {\n        this.$element = $(element);\n        this.options = options;\n        this.enabled = true;\n        this.fixTitle();\n    }\n\n    Tipsy.prototype = {\n        show: function() {\n            // if element is not in the DOM then don't show the Tipsy and return early\n            if (!isElementInDOM(this.$element)) {\n                return;\n            }\n\n            var title = this.getTitle();\n            if (title && this.enabled) {\n                var $tip = this.tip();\n\n                $tip.find(\".tipsy-inner\")[this.options.html ? \"html\" : \"text\"](\n                    title\n                );\n                $tip[0].className = \"tipsy\"; // reset classname in case of dynamic gravity\n                $tip.remove()\n                    .css({\n                        top: 0,\n                        left: 0,\n                        visibility: \"hidden\",\n                        display: \"block\"\n                    })\n                    .appendTo(document.body);\n\n                var that = this;\n                function tipOver() {\n                    that.hoverTooltip = true;\n                }\n                function tipOut() {\n                    if (that.hoverState == \"in\") return; // If field is still focused.\n                    that.hoverTooltip = false;\n                    if (that.options.trigger != \"manual\") {\n                        var eventOut =\n                            that.options.trigger == \"hover\"\n                                ? \"mouseleave.tipsy\"\n                                : \"blur.tipsy\";\n                        that.$element.trigger(eventOut);\n                    }\n                }\n\n                if (this.options.hoverable) {\n                    $tip.hover(tipOver, tipOut);\n                }\n\n                if (this.options.className) {\n                    $tip.addClass(\n                        maybeCall(this.options.className, this.$element[0])\n                    );\n                }\n\n                var pos = $.extend({}, this.$element.offset(), {\n                    width: this.$element[0].getBoundingClientRect().width,\n                    height: this.$element[0].getBoundingClientRect().height\n                });\n\n                var tipCss = {};\n                var actualWidth = $tip[0].offsetWidth,\n                    actualHeight = $tip[0].offsetHeight;\n                var gravity = maybeCall(this.options.gravity, this.$element[0]);\n\n                if (gravity.length === 2) {\n                    if (gravity.charAt(1) === \"w\") {\n                        tipCss.left = pos.left + pos.width / 2 - 15;\n                    } else {\n                        tipCss.left =\n                            pos.left + pos.width / 2 - actualWidth + 15;\n                    }\n                }\n\n                switch (gravity.charAt(0)) {\n                    case \"n\":\n                        // left could already be set if gravity is 'nw' or 'ne'\n                        if (typeof tipCss.left === \"undefined\") {\n                            tipCss.left =\n                                pos.left + pos.width / 2 - actualWidth / 2;\n                        }\n                        tipCss.top = pos.top + pos.height + this.options.offset;\n                        break;\n                    case \"s\":\n                        // left could already be set if gravity is 'sw' or 'se'\n                        if (typeof tipCss.left === \"undefined\") {\n                            tipCss.left =\n                                pos.left + pos.width / 2 - actualWidth / 2;\n\n                            // We need to apply the left positioning and then recalculate the tooltip height\n                            // If the tooltip is positioned close to the right edge of the window, it could cause\n                            // the tooltip text to overflow and change height.\n                            $tip.css(tipCss);\n                            actualHeight = $tip[0].offsetHeight;\n                        }\n                        tipCss.top =\n                            pos.top - actualHeight - this.options.offset;\n                        break;\n                    case \"e\":\n                        tipCss.left =\n                            pos.left - actualWidth - this.options.offset;\n                        tipCss.top =\n                            pos.top + pos.height / 2 - actualHeight / 2;\n                        break;\n                    case \"w\":\n                        tipCss.left =\n                            pos.left + pos.width + this.options.offset;\n                        tipCss.top =\n                            pos.top + pos.height / 2 - actualHeight / 2;\n                        break;\n                }\n\n                $tip.css(tipCss).addClass(\"tipsy-\" + gravity);\n                $tip.find(\".tipsy-arrow\")[0].className =\n                    \"tipsy-arrow tipsy-arrow-\" + gravity.charAt(0);\n\n                if (this.options.fade) {\n                    $tip.stop()\n                        .css({\n                            opacity: 0,\n                            display: \"block\",\n                            visibility: \"visible\"\n                        })\n                        .animate({ opacity: this.options.opacity });\n                } else {\n                    $tip.css({\n                        visibility: \"visible\",\n                        opacity: this.options.opacity\n                    });\n                }\n\n                if (this.options.aria) {\n                    var $tipID = tipsyID();\n                    $tip.attr(\"id\", $tipID);\n                    this.$element.attr(\"aria-describedby\", $tipID);\n                }\n            }\n        },\n\n        destroy: function() {\n            this.$element.removeData(\"tipsy\");\n\n            this.unbindHandlers();\n            this.hide();\n        },\n\n        unbindHandlers: function() {\n            if (this.options.live) {\n                $(document).off(\".tipsy\", this.options.live);\n            } else {\n                this.$element.off(\".tipsy\");\n            }\n        },\n\n        hide: function() {\n            if (this.options.fade) {\n                this.tip()\n                    .stop()\n                    .fadeOut(function() {\n                        $(this).remove();\n                    });\n            } else {\n                this.tip().remove();\n            }\n            if (this.options.aria) {\n                this.$element.removeAttr(\"aria-describedby\");\n            }\n        },\n\n        fixTitle: function() {\n            var $e = this.$element;\n            if (\n                $e.attr(\"title\") ||\n                typeof $e.attr(\"original-title\") != \"string\"\n            ) {\n                $e.attr(\"original-title\", $e.attr(\"title\") || \"\").removeAttr(\n                    \"title\"\n                );\n            }\n        },\n\n        getTitle: function() {\n            var title,\n                $e = this.$element,\n                o = this.options;\n            this.fixTitle();\n            var title,\n                o = this.options;\n            if (typeof o.title == \"string\") {\n                title = $e.attr(\n                    o.title == \"title\" ? \"original-title\" : o.title\n                );\n            } else if (typeof o.title == \"function\") {\n                title = o.title.call($e[0]);\n            }\n            title = (\"\" + title).replace(/(^\\s*|\\s*$)/, \"\");\n            return title || o.fallback;\n        },\n\n        tip: function() {\n            if (!this.$tip) {\n                this.$tip = $('<div class=\"tipsy\"></div>')\n                    .html(\n                        '<div class=\"tipsy-arrow\"></div><div class=\"tipsy-inner\"></div>'\n                    )\n                    .attr(\"role\", \"tooltip\");\n                this.$tip.data(\"tipsy-pointee\", this.$element[0]);\n            }\n            return this.$tip;\n        },\n\n        validate: function() {\n            if (!this.$element[0].parentNode) {\n                this.hide();\n                this.$element = null;\n                this.options = null;\n            }\n        },\n\n        enable: function() {\n            this.enabled = true;\n        },\n        disable: function() {\n            this.enabled = false;\n        },\n        toggleEnabled: function() {\n            this.enabled = !this.enabled;\n        }\n    };\n\n    $.fn.tipsy = function(options) {\n        if (options === true) {\n            return this.data(\"tipsy\");\n        } else if (typeof options == \"string\") {\n            var tipsy = this.data(\"tipsy\");\n            if (tipsy) tipsy[options]();\n            return this;\n        }\n\n        options = $.extend({}, $.fn.tipsy.defaults, options);\n        if (options.hoverable) {\n            options.delayOut = options.delayOut || 20;\n        }\n\n        // Check for jQuery support and patch live binding for jQuery 3 compat.\n        if (options.live === true) {\n            if (!this.selector) {\n                // No more jQuery support!\n                throw new Error(liveBindingWarning);\n            } else {\n                // Deprecated behaviour\n                console && console.warn && console.warn(liveBindingWarning);\n                options.live = this.selector;\n            }\n        }\n\n        function get(ele) {\n            var tipsy = $.data(ele, \"tipsy\");\n            if (!tipsy) {\n                tipsy = new Tipsy(ele, $.fn.tipsy.elementOptions(ele, options));\n                $.data(ele, \"tipsy\", tipsy);\n            }\n            return tipsy;\n        }\n\n        function enter() {\n            var tipsy = get(this);\n            tipsy.hoverState = \"in\";\n            if (options.delayIn == 0) {\n                tipsy.show();\n            } else {\n                tipsy.fixTitle();\n                setTimeout(function() {\n                    if (\n                        tipsy.hoverState == \"in\" &&\n                        isElementInDOM(tipsy.$element)\n                    ) {\n                        tipsy.show();\n                    }\n                }, options.delayIn);\n            }\n        }\n\n        function leave() {\n            var tipsy = get(this);\n            tipsy.hoverState = \"out\";\n            if (options.delayOut == 0) {\n                tipsy.hide();\n            } else {\n                setTimeout(function() {\n                    if (tipsy.hoverState == \"out\" && !tipsy.hoverTooltip) {\n                        tipsy.hide();\n                    }\n                }, options.delayOut);\n            }\n        }\n\n        // create a tipsy object for every selected element,\n        // even when the events are delegated.\n        // this allows destruction to occur.\n        this.each(function() {\n            get(this);\n        });\n\n        if (options.trigger != \"manual\") {\n            var eventIn =\n                    options.trigger == \"hover\"\n                        ? \"mouseenter.tipsy focus.tipsy\"\n                        : \"focus.tipsy\",\n                eventOut =\n                    options.trigger == \"hover\"\n                        ? \"mouseleave.tipsy blur.tipsy\"\n                        : \"blur.tipsy\";\n            if (options.live) {\n                $(document)\n                    .on(eventIn, options.live, enter)\n                    .on(eventOut, options.live, leave);\n            } else {\n                this.on(eventIn, enter).on(eventOut, leave);\n            }\n        }\n\n        return this;\n    };\n\n    $.fn.tipsy.defaults = {\n        aria: false,\n        className: null,\n        delayIn: 0,\n        delayOut: 0,\n        fade: false,\n        fallback: \"\",\n        gravity: \"n\",\n        html: false,\n        live: false,\n        hoverable: false,\n        offset: 0,\n        opacity: 0.8,\n        title: \"title\",\n        trigger: \"hover\"\n    };\n\n    $.fn.tipsy.revalidate = function() {\n        $(\".tipsy\").each(function() {\n            var pointee = $.data(this, \"tipsy-pointee\");\n            if (!pointee || !isElementInDOM(pointee)) {\n                $(this).remove();\n            }\n        });\n    };\n\n    // Overwrite this method to provide options on a per-element basis.\n    // For example, you could store the gravity in a 'tipsy-gravity' attribute:\n    // return $.extend({}, options, {gravity: $(ele).attr('tipsy-gravity') || 'n' });\n    // (remember - do not modify 'options' in place!)\n    $.fn.tipsy.elementOptions = function(ele, options) {\n        return $.metadata ? $.extend({}, options, $(ele).metadata()) : options;\n    };\n\n    $.fn.tipsy.autoNS = function() {\n        return $(this).offset().top >\n            $(document).scrollTop() + $(window).height() / 2\n            ? \"s\"\n            : \"n\";\n    };\n\n    $.fn.tipsy.autoWE = function() {\n        return $(this).offset().left >\n            $(document).scrollLeft() + $(window).width() / 2\n            ? \"e\"\n            : \"w\";\n    };\n\n    /**\n     * yields a closure of the supplied parameters, producing a function that takes\n     * no arguments and is suitable for use as an autogravity function like so:\n     *\n     * @param margin (int) - distance from the viewable region edge that an\n     *        element should be before setting its tooltip's gravity to be away\n     *        from that edge.\n     * @param prefer (string, e.g. 'n', 'sw', 'w') - the direction to prefer\n     *        if there are no viewable region edges effecting the tooltip's\n     *        gravity. It will try to vary from this minimally, for example,\n     *        if 'sw' is preferred and an element is near the right viewable\n     *        region edge, but not the top edge, it will set the gravity for\n     *        that element's tooltip to be 'se', preserving the southern\n     *        component.\n     */\n    $.fn.tipsy.autoBounds = function(margin, prefer) {\n        return function() {\n            var dir = {\n                    ns: prefer[0],\n                    ew: prefer.length > 1 ? prefer[1] : false\n                },\n                boundTop = $(document).scrollTop() + margin,\n                boundLeft = $(document).scrollLeft() + margin,\n                $this = $(this);\n\n            if ($this.offset().top < boundTop) dir.ns = \"n\";\n            if ($this.offset().left < boundLeft) dir.ew = \"w\";\n            if (\n                $(window).width() +\n                    $(document).scrollLeft() -\n                    $this.offset().left <\n                margin\n            )\n                dir.ew = \"e\";\n            if (\n                $(window).height() +\n                    $(document).scrollTop() -\n                    $this.offset().top <\n                margin\n            )\n                dir.ns = \"s\";\n\n            return dir.ns + (dir.ew ? dir.ew : \"\");\n        };\n    };\n})(jQuery);\n"],"sourceRoot":""}